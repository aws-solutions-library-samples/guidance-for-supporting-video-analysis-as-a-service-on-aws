{
    "smithy": "2.0",
    "shapes": {
        "aws.api#ArnNamespace": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "A string representing a service's ARN namespace.",
                "smithy.api#pattern": "^[a-z0-9.\\-]{1,63}$",
                "smithy.api#private": {}
            }
        },
        "aws.api#CloudFormationName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "A string representing a CloudFormation service name.",
                "smithy.api#pattern": "^[A-Z][A-Za-z0-9]+$",
                "smithy.api#private": {}
            }
        },
        "aws.api#TagOperationReference": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Points to an operation designated for a tagging APi",
                "smithy.api#idRef": {
                    "failWhenMissing": true,
                    "selector": "resource > operation"
                }
            }
        },
        "aws.api#TaggableApiConfig": {
            "type": "structure",
            "members": {
                "tagApi": {
                    "target": "aws.api#TagOperationReference",
                    "traits": {
                        "smithy.api#documentation": "The `tagApi` property is a string value that references a non-instance\nor create operation that creates or updates tags on the resource.",
                        "smithy.api#required": {}
                    }
                },
                "untagApi": {
                    "target": "aws.api#TagOperationReference",
                    "traits": {
                        "smithy.api#documentation": "The `untagApi` property is a string value that references a non-instance\noperation that removes tags on the resource.",
                        "smithy.api#required": {}
                    }
                },
                "listTagsApi": {
                    "target": "aws.api#TagOperationReference",
                    "traits": {
                        "smithy.api#documentation": "The `listTagsApi` property is a string value that references a non-\ninstance operation which gets the current tags on the resource.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Structure representing the configuration of resource specific tagging APIs"
            }
        },
        "aws.api#arn": {
            "type": "structure",
            "members": {
                "template": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the ARN template. The provided string contains URI-template\nstyle label placeholders that contain the name of one of the identifiers\ndefined in the `identifiers` property of the resource. These labels can\nbe substituted at runtime with the actual identifiers of the resource.\nEvery identifier name of the resource MUST have corresponding label of\nthe same name. Note that percent-encoding **is not** performed on these\nplaceholder values; they are to be replaced literally. For relative ARN\ntemplates that have not set `absolute` to `true`, the template string\ncontains only the resource part of the ARN (for example,\n`foo/{MyResourceId}`). Relative ARNs MUST NOT start with \"/\".",
                        "smithy.api#required": {}
                    }
                },
                "absolute": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Set to true to indicate that the ARN template contains a fully-formed\nARN that does not need to be merged with the service. This type of ARN\nMUST be used when the identifier of a resource is an ARN or is based on\nthe ARN identifier of a parent resource."
                    }
                },
                "noRegion": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Set to true to specify that the ARN does not contain a region. If not\nset, or if set to false, the resolved ARN will contain a placeholder\nfor the region. This can only be set to true if `absolute` is not set\nor is false."
                    }
                },
                "noAccount": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Set to true to specify that the ARN does not contain an account ID. If\nnot set, or if set to false, the resolved ARN will contain a placeholder\nfor the customer account ID. This can only be set to true if absolute\nis not set or is false."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Specifies an ARN template for the resource.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
                },
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.api#arnReference": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The AWS CloudFormation resource type contained in the ARN."
                    }
                },
                "resource": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "An absolute shape ID that references the Smithy resource type contained\nin the ARN (e.g., `com.foo#SomeResource`). The targeted resource is not\nrequired to be found in the model, allowing for external shapes to be\nreferenced without needing to take on an additional dependency. If the\nshape is found in the model, it MUST target a resource shape, and the\nresource MUST be found within the closure of the referenced service\nshape."
                    }
                },
                "service": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Smithy service absolute shape ID that is referenced by the ARN. The\ntargeted service is not required to be found in the model, allowing for\nexternal shapes to be referenced without needing to take on an\nadditional dependency."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Marks a string as containing an ARN.",
                "smithy.api#trait": {
                    "selector": "string"
                }
            }
        },
        "aws.api#clientDiscoveredEndpoint": {
            "type": "structure",
            "members": {
                "required": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "This field denotes whether or not this operation requires the use of a\nspecific endpoint. If this field is false, the standard regional\nendpoint for a service can handle this request. The client will start\nsending requests to the standard regional endpoint while working to\ndiscover a more specific endpoint.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that the target operation should use the client's endpoint\ndiscovery logic.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#clientEndpointDiscovery": {
            "type": "structure",
            "members": {
                "operation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the operation that clients should use to discover endpoints\nfor the service.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "operation"
                        },
                        "smithy.api#required": {}
                    }
                },
                "error": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the error that tells clients that the endpoint they are using\nis no longer valid. This error MUST be bound to any operation bound to\nthe service which is marked with the aws.api#clientDiscoveredEndpoint\ntrait.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "structure[trait|error]"
                        },
                        "smithy.api#recommended": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Configures endpoint discovery for the service.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#clientEndpointDiscoveryId": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates members of the operation input which should be use to discover\nendpoints.",
                "smithy.api#trait": {
                    "selector": "operation[trait|aws.api#clientDiscoveredEndpoint] -[input]->\nstructure > :test(member[trait|required] > string)"
                }
            }
        },
        "aws.api#controlPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the control plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#dataPlane"
                    ]
                }
            }
        },
        "aws.api#data": {
            "type": "enum",
            "members": {
                "CUSTOMER_CONTENT": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Customer content means any software (including machine images), data,\ntext, audio, video or images that customers or any customer end user\ntransfers to AWS for processing, storage or hosting by AWS services in\nconnection with the customer’s accounts and any computational results\nthat customers or any customer end user derive from the foregoing\nthrough their use of AWS services.",
                        "smithy.api#enumValue": "content"
                    }
                },
                "CUSTOMER_ACCOUNT_INFORMATION": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Account information means information about customers that customers\nprovide to AWS in connection with the creation or administration of\ncustomers’ accounts.",
                        "smithy.api#enumValue": "account"
                    }
                },
                "SERVICE_ATTRIBUTES": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Service Attributes means service usage data related to a customer’s\naccount, such as resource identifiers, metadata tags, security and\naccess roles, rules, usage policies, permissions, usage statistics,\nlogging data, and analytics.",
                        "smithy.api#enumValue": "usage"
                    }
                },
                "TAG_DATA": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Designates metadata tags applied to AWS resources.",
                        "smithy.api#enumValue": "tagging"
                    }
                },
                "PERMISSIONS_DATA": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Designates security and access roles, rules, usage policies, and\npermissions.",
                        "smithy.api#enumValue": "permissions"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Designates the target as containing data of a known classification level.",
                "smithy.api#trait": {
                    "selector": ":test(simpleType, list, structure, union, member)"
                }
            }
        },
        "aws.api#dataPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the data plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#controlPlane"
                    ]
                }
            }
        },
        "aws.api#service": {
            "type": "structure",
            "members": {
                "sdkId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `sdkId` property is a required string value that specifies the AWS\nSDK service ID (e.g., \"API Gateway\"). This value is used for generating\nclient names in SDKs and for linking between services.",
                        "smithy.api#required": {}
                    }
                },
                "arnNamespace": {
                    "target": "aws.api#ArnNamespace",
                    "traits": {
                        "smithy.api#documentation": "The `arnNamespace` property is a string value that defines the ARN service\nnamespace of the service (e.g., \"apigateway\"). This value is used in\nARNs assigned to resources in the service. If not set, this value\ndefaults to the lowercase name of the service shape."
                    }
                },
                "cloudFormationName": {
                    "target": "aws.api#CloudFormationName",
                    "traits": {
                        "smithy.api#documentation": "The `cloudFormationName` property is a string value that specifies the\nAWS CloudFormation service name (e.g., `ApiGateway`). When not set,\nthis value defaults to the name of the service shape. This value is\npart of the CloudFormation resource type name that is automatically\nassigned to resources in the service (e.g., `AWS::<NAME>::resourceName`)."
                    }
                },
                "cloudTrailEventSource": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `cloudTrailEventSource` property is a string value that defines the\nAWS customer-facing eventSource property contained in CloudTrail event\nrecords emitted by the service. If not specified, this value defaults\nto the `arnNamespace` plus `.amazonaws.com`."
                    }
                },
                "docId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `docId` property is a string value that defines the identifier\nused to implemention linking between service and SDK documentation for\nAWS services. If not specified, this value defaults to the `sdkId` in\nlower case plus the service `version` property, separated by dashes."
                    }
                },
                "endpointPrefix": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `endpointPrefix` property is a string value that identifies which\nendpoint in a given region should be used to connect to the service.\nFor example, most services in the AWS standard partition have endpoints\nwhich follow the format: `{endpointPrefix}.{region}.amazonaws.com`. A\nservice with the endpoint prefix example in the region us-west-2 might\nhave the endpoint example.us-west-2.amazonaws.com.\n\nThis value is not unique across services and is subject to change.\nTherefore, it MUST NOT be used for client naming or for any other\npurpose that requires a static, unique identifier. sdkId should be used\nfor those purposes. Additionally, this value can be used to attempt to\nresolve endpoints."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An AWS service is defined using the `aws.api#service` trait. This trait\nprovides information about the service like the name used to generate AWS\nSDK client classes and the namespace used in ARNs.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#tagEnabled": {
            "type": "structure",
            "members": {
                "disableDefaultOperations": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "The `disableDefaultOperations` property is a boolean value that specifies\nif the service does not have the standard tag operations supporting all\nresources on the service. Default value is `false`"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Annotates a service as having tagging on 1 or more resources and associated\nAPIs to perform CRUD operations on those tags",
                "smithy.api#trait": {
                    "selector": "service"
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.api#taggable": {
            "type": "structure",
            "members": {
                "property": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The `property` property is a string value that identifies which\nresource property represents tags for the resource."
                    }
                },
                "apiConfig": {
                    "target": "aws.api#TaggableApiConfig",
                    "traits": {
                        "smithy.api#documentation": "Specifies configuration for resource specific tagging APIs if the\nresource has them."
                    }
                },
                "disableSystemTags": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Flag indicating if the resource is not able to carry AWS system level.\nUsed by service principals. Default value is `false`"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates a resource supports CRUD operations for tags. Either through\nresource lifecycle or instance operations or tagging operations on the\nservice.",
                "smithy.api#trait": {
                    "selector": "resource"
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.apigateway#Arn": {
            "type": "string",
            "traits": {
                "aws.api#arnReference": {},
                "smithy.api#documentation": "The ARN of an AWS integration target.\n\nThis string MAY contain the literal string `{serviceName}` and/or the\nliteral string `{operationName}`, which will be replaced with the name of\nthe Smithy service shape and the name of the Smithy operation shape,\nrespectively.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#AuthorizerDefinition": {
            "type": "structure",
            "members": {
                "scheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Smithy authentication scheme used by the client (e.g, aws.v4).",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true,
                            "errorMessage": "The scheme of an authorizer definition must reference an auth trait"
                        },
                        "smithy.api#required": {}
                    }
                },
                "type": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The type of the authorizer. If specifying information beyond the scheme,\nthis value is required. The value must be \"token\", for an authorizer\nwith the caller identity embedded in an authorization token, or\n\"request\", for an authorizer with the caller identity contained in\nrequest parameters."
                    }
                },
                "customAuthType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "This value is not used directly by API Gateway but will be used for\nOpenAPI exports. This will default to \"awsSigV4\" if your scheme is\n\"aws.v4\", or \"custom\" otherwise."
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Uniform Resource Identifier (URI) of the authorizer Lambda function"
                    }
                },
                "credentials": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Credentials required for invoking the authorizer"
                    }
                },
                "identitySource": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Comma-separated list of mapping expressions of the request parameters\nas the identity source. Applicable for the authorizer of the \"request\"\ntype only."
                    }
                },
                "identityValidationExpression": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A regular expression for validating the token as the incoming identity"
                    }
                },
                "resultTtlInSeconds": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The number of seconds for which the resulting IAM policy is cached."
                    }
                },
                "authorizerPayloadFormatVersion": {
                    "target": "aws.apigateway#PayloadFormatVersion",
                    "traits": {
                        "smithy.api#documentation": "Format version of the payload sent from API Gateway to the authorizer\nand how API Gateway interprets the response. Used only by HTTP APIs."
                    }
                },
                "enableSimpleResponses": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Specifies if the autorizer returns either a boolean or an IAM Policy.\nIf enabled, authorizer returns a boolean. Used only by HTTP APIs.\nOnly supported when authorizerPayloadFormatVersion is set to 2.0."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An object that associates an authorizer and associated metadata with an\nauthentication mechanism.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#ConnectionType": {
            "type": "enum",
            "members": {
                "INTERNET": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Connections through the public routable internet.",
                        "smithy.api#enumValue": "INTERNET"
                    }
                },
                "VPC_LINK": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Private connections between API Gateway and a network load balancer in\na VPC.",
                        "smithy.api#enumValue": "VPC_LINK"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#ContentHandling": {
            "type": "enum",
            "members": {
                "CONVERT_TO_TEXT": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "For converting a binary payload into a Base64-encoded string or\nconverting a text payload into a utf-8-encoded string or passing\nthrough the text payload natively without modification",
                        "smithy.api#enumValue": "CONVERT_TO_TEXT"
                    }
                },
                "CONVERT_TO_BINARY": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "For converting a text payload into Base64-decoded blob or passing\nthrough a binary payload natively without modification.",
                        "smithy.api#enumValue": "CONVERT_TO_BINARY"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines the contentHandling for the integration.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IamRoleArn": {
            "type": "string",
            "traits": {
                "aws.api#arnReference": {
                    "type": "AWS::IAM::Role"
                },
                "smithy.api#documentation": "The ARN of the IAM role to assume with invoking the integration.\n\nThis string MAY contain the literal string `{serviceName}` and/or the\nliteral string `{operationName}`, which will be replaced with the name of\nthe Smithy service shape and the name of the Smithy operation shape,\nrespectively.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IntegrationResponse": {
            "type": "structure",
            "members": {
                "statusCode": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "HTTP status code for the method response; for example, \"200\". This must\ncorrespond to a matching response in the OpenAPI Operation responses\nfield."
                    }
                },
                "contentHandling": {
                    "target": "aws.apigateway#ContentHandling",
                    "traits": {
                        "smithy.api#documentation": "Response payload content handling."
                    }
                },
                "responseTemplates": {
                    "target": "aws.apigateway#Templates",
                    "traits": {
                        "smithy.api#documentation": "Specifies media type-specific mapping templates for the response's\npayload."
                    }
                },
                "responseParameters": {
                    "target": "aws.apigateway#ResponseParameters",
                    "traits": {
                        "smithy.api#documentation": "Specifies parameter mappings for the response. Only the header and\nbody parameters of the integration response can be mapped to the header\nparameters of the method."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines a response and specifies parameter mappings.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IntegrationResponses": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.apigateway#IntegrationResponse"
            },
            "traits": {
                "smithy.api#documentation": "A map of response identifiers to responses.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IntegrationType": {
            "type": "enum",
            "members": {
                "AWS": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "An integration with AWS Lambda functions or other AWS services such as\nAmazon DynamoDB, Amazon Simple Notification Service or Amazon Simple\nQueue Service.",
                        "smithy.api#enumValue": "aws"
                    }
                },
                "AWS_PROXY": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "An integration with AWS Lambda functions.",
                        "smithy.api#enumValue": "aws_proxy"
                    }
                },
                "HTTP": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "An integration with an HTTP backend.",
                        "smithy.api#enumValue": "http"
                    }
                },
                "HTTP_PROXY": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "An integration with an HTTP backend.",
                        "smithy.api#enumValue": "http_proxy"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#PassThroughBehavior": {
            "type": "enum",
            "members": {
                "WHEN_NO_TEMPLATES": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Passes the method request body through the integration request to the\nback end without transformation when no mapping template is defined in\nthe integration request. If a template is defined when this option is\nselected, the method request of an unmapped content-type will be\nrejected with an HTTP 415 Unsupported Media Type response.",
                        "smithy.api#enumValue": "when_no_templates"
                    }
                },
                "WHEN_NO_MATCH": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Passes the method request body through the integration request to the\nback end without transformation when the method request content type\ndoes not match any content type associated with the mapping templates\ndefined in the integration request.",
                        "smithy.api#enumValue": "when_no_match"
                    }
                },
                "NEVER": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Rejects the method request with an HTTP 415 Unsupported Media Type\nresponse when either the method request content type does not match any\ncontent type associated with the mapping templates defined in the\nintegration request or no mapping template is defined in the integration\nrequest.",
                        "smithy.api#enumValue": "never"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines the passThroughBehavior for the integration",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#PayloadFormatVersion": {
            "type": "enum",
            "members": {
                "V1_0": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Specifies 1.0 version of the format used by the authorizer",
                        "smithy.api#enumValue": "1.0"
                    }
                },
                "V2_0": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "Specifies 2.0 version of the format used by the authorizer",
                        "smithy.api#enumValue": "2.0"
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines the payloadFormatVersion used by authorizers",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#RequestParameters": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "A mapping of integration request parameters to the API Gateway data\nmapping expression that should be used to populate the parameter.\n\n**Note:** This feature is provided primarily to allow injecting static\nvalues and context variables for request parameters. Request data MAY be\nmapped to headers using the syntax described in\n[the API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/request-response-data-mappings.html#mapping-response-parameters);\nhowever, the data must be identified according to its location in the\nserialized request, which may differ from protocol to protocol. Here be\ndragons!",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#ResponseParameters": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "Specifies parameter mappings for the response. Only the header and body\nparameters of the integration response can be mapped to the header\nparameters of the method.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#Templates": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "A map of MIME types to velocity templates allowing you to craft a new\nintegration message from received data.\n\n**Note:** This feature is provided primarily to allow injecting static\nvalues and context variables for request parameters. Request data MAY be\nmapped to headers using the syntax described in\n[the API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/request-response-data-mappings.html#mapping-response-parameters);\nhowever, the data must be identified according to its location in the\nserialized request, which may differ from protocol to protocol. Here be\ndragons!",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#apiKeySource": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Specifies the source of the caller identifier that will be used to throttle\nAPI methods that require a key.",
                "smithy.api#externalDocumentation": {
                    "Developer Guide": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-api-key-source.html"
                },
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.apigateway#authorizer": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Attaches an authorizer to a service, resource, or operation.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)"
                }
            }
        },
        "aws.apigateway#authorizers": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.apigateway#AuthorizerDefinition"
            },
            "traits": {
                "smithy.api#documentation": "A list of API Gateway authorizers to augment the service's declared authentication\nmechanisms.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.apigateway#integration": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "aws.apigateway#IntegrationType",
                    "traits": {
                        "smithy.api#documentation": "The type of integration with the specified backend.",
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "aws.apigateway#Arn",
                    "traits": {
                        "smithy.api#documentation": "The endpoint URI of the backend. For integrations of the `aws` type,\nthis is an ARN value. For the HTTP integration, this is the URL of the\nHTTP endpoint including the `https` or `http` scheme.",
                        "smithy.api#required": {}
                    }
                },
                "credentials": {
                    "target": "aws.apigateway#IamRoleArn",
                    "traits": {
                        "smithy.api#documentation": "Specifies the credentials required for the integration, if any. For AWS\nIAM role-based credentials, specify the ARN of an appropriate IAM role.\nIf unspecified, credentials will default to resource-based permissions\nthat must be added manually to allow the API to access the resource."
                    }
                },
                "httpMethod": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Specifies the integration's HTTP method type (for example, `POST`).\nFor Lambda function invocations, the value must be `POST`.",
                        "smithy.api#required": {}
                    }
                },
                "passThroughBehavior": {
                    "target": "aws.apigateway#PassThroughBehavior",
                    "traits": {
                        "smithy.api#documentation": "Specifies how a request payload of unmapped content type is passed\nthrough the integration request without modification."
                    }
                },
                "contentHandling": {
                    "target": "aws.apigateway#ContentHandling",
                    "traits": {
                        "smithy.api#documentation": "Request payload content handling."
                    }
                },
                "timeoutInMillis": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Integration timeouts between 50 ms and 29,000 ms."
                    }
                },
                "connectionId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The ID of a VpcLink for the private integration."
                    }
                },
                "connectionType": {
                    "target": "aws.apigateway#ConnectionType",
                    "traits": {
                        "smithy.api#default": "INTERNET",
                        "smithy.api#documentation": "The type of the network connection to the integration endpoint. The\nvalid value is `INTERNET` for connections through the public routable\ninternet or `VPC_LINK` for private connections between API Gateway and\na network load balancer in a VPC. The default value is `INTERNET`."
                    }
                },
                "cacheNamespace": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "An API-specific tag group of related cached parameters."
                    }
                },
                "payloadFormatVersion": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Specifies the format of the payload sent to an integration. Required\nfor HTTP APIs. For HTTP APIs, supported values for Lambda proxy\nintegrations are 1.0 and 2.0. For all other integrations, 1.0 is the\nonly supported value."
                    }
                },
                "cacheKeyParameters": {
                    "target": "aws.apigateway#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of request parameter names whose values are to be cached."
                    }
                },
                "requestParameters": {
                    "target": "aws.apigateway#RequestParameters",
                    "traits": {
                        "smithy.api#documentation": "Specifies mappings from method request parameters to integration\nrequest parameters."
                    }
                },
                "requestTemplates": {
                    "target": "aws.apigateway#Templates",
                    "traits": {
                        "smithy.api#documentation": "Mapping templates for a request payload of specified media types."
                    }
                },
                "responses": {
                    "target": "aws.apigateway#IntegrationResponses",
                    "traits": {
                        "smithy.api#documentation": "Defines the method's responses and specifies desired parameter mappings\nor payload mappings from integration responses to method responses."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an API Gateway integration.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.apigateway#mockIntegration"
                    ]
                }
            }
        },
        "aws.apigateway#mockIntegration": {
            "type": "structure",
            "members": {
                "passThroughBehavior": {
                    "target": "aws.apigateway#PassThroughBehavior",
                    "traits": {
                        "smithy.api#documentation": "Specifies how a request payload of unmapped content type is passed\nthrough the integration request without modification."
                    }
                },
                "requestParameters": {
                    "target": "aws.apigateway#RequestParameters",
                    "traits": {
                        "smithy.api#documentation": "Specifies mappings from method request parameters to integration\nrequest parameters."
                    }
                },
                "requestTemplates": {
                    "target": "aws.apigateway#Templates",
                    "traits": {
                        "smithy.api#documentation": "Mapping templates for a request payload of specified media types."
                    }
                },
                "responses": {
                    "target": "aws.apigateway#IntegrationResponses",
                    "traits": {
                        "smithy.api#documentation": "Defines the method's responses and specifies desired parameter mappings\nor payload mappings from integration responses to method responses."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an API Gateway mock integration.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.apigateway#integration"
                    ]
                }
            }
        },
        "aws.apigateway#requestValidator": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Selects which request validation strategy to use. One of: 'full', 'params-only', 'body-only'",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, operation)"
                }
            }
        },
        "aws.auth#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.auth#cognitoUserPools": {
            "type": "structure",
            "members": {
                "providerArns": {
                    "target": "aws.auth#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the Amazon Cognito user pool ARNs. Each element is of this\nformat: `arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}`.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {},
                "smithy.api#documentation": "Configures an Amazon Cognito User Pools auth scheme.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal",
                    "internal",
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#sigv4": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The signature version 4 service signing name to use in the credential\nscope when signing requests. This value SHOULD match the `arnNamespace`\nproperty of the `aws.api#service` trait if present and the `name`\nproperty of the `aws.api#sigv4a` trait if present.",
                        "smithy.api#externalDocumentation": {
                            "Reference": "https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html"
                        },
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {
                    "traits": [
                        "aws.auth#unsignedPayload"
                    ]
                },
                "smithy.api#documentation": "[Signature Version 4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html)\nis the process to add authentication information to AWS requests sent by HTTP. For\nsecurity, most requests to AWS must be signed with an access key, which consists\nof an access key ID and secret access key. These two keys are commonly referred to\nas your security credentials.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#sigv4a": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The signature version 4a service signing name to use in the credential\nscope when signing requests. This value SHOULD match the `arnNamespace`\nproperty of the `aws.api#service` trait if present and the `name`\nproperty of the `aws.api#sigv4` trait.",
                        "smithy.api#externalDocumentation": {
                            "Reference": "https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html"
                        },
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {
                    "traits": [
                        "aws.auth#unsignedPayload"
                    ]
                },
                "smithy.api#documentation": "Signature Version 4 Asymmetric (SigV4A), an extension of Signature Version 4 (SigV4), is the\nprocess to add authentication information to AWS requests sent by HTTP. SigV4A is nearly\nidentical to SigV4, but also uses public-private keys and asymmetric cryptographic signatures\nfor every request. Most notably, SigV4A supports signatures for multi-region API requests.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html",
                    "Examples": "https://github.com/aws-samples/sigv4a-signing-examples"
                },
                "smithy.api#trait": {
                    "selector": "service[trait|aws.auth#sigv4]"
                }
            }
        },
        "aws.auth#unsignedPayload": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that the request payload of a signed request is not to be used\nas part of the signature.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.customizations#s3UnwrappedXmlOutput": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates the response body from S3 is not wrapped in the\naws-restxml-protocol operation-level XML node. Intended to only be used by\nAWS S3.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.protocols#ChecksumAlgorithm": {
            "type": "enum",
            "members": {
                "CRC32C": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "CRC32C",
                        "smithy.api#enumValue": "CRC32C"
                    }
                },
                "CRC32": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "CRC32",
                        "smithy.api#enumValue": "CRC32"
                    }
                },
                "SHA1": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "SHA1",
                        "smithy.api#enumValue": "SHA1"
                    }
                },
                "SHA256": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#documentation": "SHA256",
                        "smithy.api#enumValue": "SHA256"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocols#ChecksumAlgorithmSet": {
            "type": "list",
            "member": {
                "target": "aws.protocols#ChecksumAlgorithm"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {},
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.protocols#HttpConfiguration": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList",
                    "traits": {
                        "smithy.api#documentation": "The priority ordered list of supported HTTP protocol versions."
                    }
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList",
                    "traits": {
                        "smithy.api#documentation": "The priority ordered list of supported HTTP protocol versions that\nare required when using event streams with the service. If not set,\nthis value defaults to the value of the `http` member. Any entry in\n`eventStreamHttp` MUST also appear in `http`."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Contains HTTP protocol configuration for HTTP-based protocols.",
                "smithy.api#mixin": {
                    "localTraits": [
                        "smithy.api#private"
                    ]
                },
                "smithy.api#private": {}
            }
        },
        "aws.protocols#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocols#awsJson1_0": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {},
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use\nHTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsJson1_1": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {},
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use\nHTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsQuery": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as\n`x-www-form-urlencoded` strings and responses in XML documents. This\nprotocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "aws.protocols#awsQueryError",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                },
                "smithy.api#traitValidators": {
                    "UnsupportedProtocolDocument": {
                        "selector": "~> member :test(> document)",
                        "message": "Document types are not supported with awsQuery"
                    }
                }
            }
        },
        "aws.protocols#awsQueryCompatible": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Enable backward compatibility when migrating from awsQuery to awsJson protocol",
                "smithy.api#trait": {
                    "selector": "service [trait|aws.protocols#awsJson1_0]"
                }
            }
        },
        "aws.protocols#awsQueryError": {
            "type": "structure",
            "members": {
                "code": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The value used to distinguish this error shape during serialization.",
                        "smithy.api#required": {}
                    }
                },
                "httpResponseCode": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The HTTP response code used on a response containing this error shape.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Provides the value in the 'Code' distinguishing field and HTTP response\ncode for an operation error.",
                "smithy.api#trait": {
                    "selector": "structure [trait|error]",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.protocols#ec2Query": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as Amazon EC2\nformatted `x-www-form-urlencoded` strings and responses in XML documents.\nThis protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "aws.protocols#ec2QueryName",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                },
                "smithy.api#traitValidators": {
                    "UnsupportedProtocolDocument": {
                        "selector": "~> member :test(> document)",
                        "message": "Document types are not supported with ec2Query"
                    }
                }
            }
        },
        "aws.protocols#ec2QueryName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Indicates the serialized name of a structure member when that structure is\nserialized for the input of an EC2 operation.",
                "smithy.api#pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                "smithy.api#trait": {
                    "selector": "structure > member"
                }
            }
        },
        "aws.protocols#httpChecksum": {
            "type": "structure",
            "members": {
                "requestAlgorithmMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member that is used to configure\nrequest checksum behavior."
                    }
                },
                "requestChecksumRequired": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Indicates an operation requires a checksum in its HTTP request."
                    }
                },
                "requestValidationModeMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member used to opt-in to response\nchecksum validation."
                    }
                },
                "responseAlgorithms": {
                    "target": "aws.protocols#ChecksumAlgorithmSet",
                    "traits": {
                        "smithy.api#documentation": "Defines the checksum algorithms clients should look for when performing\nHTTP response checksum validation."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that an operation supports checksum validation.",
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.protocols#restJson1": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {},
            "traits": {
                "smithy.api#documentation": "A RESTful protocol that sends JSON in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#httpChecksumRequired",
                        "smithy.api#jsonName"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#restXml": {
            "type": "structure",
            "mixins": [
                {
                    "target": "aws.protocols#HttpConfiguration"
                }
            ],
            "members": {
                "noErrorWrapping": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#deprecated": {},
                        "smithy.api#documentation": "Disables the serialization wrapping of error properties in an 'Error'\nXML element."
                    }
                }
            },
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "A RESTful protocol that sends XML in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#httpChecksumRequired",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                },
                "smithy.api#traitValidators": {
                    "UnsupportedProtocolDocument": {
                        "selector": "~> member :test(> document)",
                        "message": "Document types are not supported with restXml"
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics#AccessDeniedException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 403
            }
        },
        "com.amazonaws.videoanalytics#ConflictException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 409
            }
        },
        "com.amazonaws.videoanalytics#DeviceId": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 128
                },
                "smithy.api#pattern": "^[a-zA-Z0-9:_\\-]+$"
            }
        },
        "com.amazonaws.videoanalytics#InternalServerException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#error": "server",
                "smithy.api#httpError": 500
            }
        },
        "com.amazonaws.videoanalytics#JobId": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 128
                },
                "smithy.api#pattern": "^[a-z0-9\\-]+$"
            }
        },
        "com.amazonaws.videoanalytics#KVSStreamARNs": {
            "type": "structure",
            "members": {
                "kvsStreamARNForPlayback": {
                    "target": "smithy.api#String"
                }
            }
        },
        "com.amazonaws.videoanalytics#KeyPair": {
            "type": "structure",
            "members": {
                "privateKey": {
                    "target": "smithy.api#String"
                },
                "publicKey": {
                    "target": "smithy.api#String"
                }
            }
        },
        "com.amazonaws.videoanalytics#KeyValueMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#length": {
                        "min": 1,
                        "max": 128
                    },
                    "smithy.api#pattern": "^[\\s\\S]*$"
                }
            },
            "value": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#length": {
                        "min": 0,
                        "max": 256
                    },
                    "smithy.api#pattern": "^[\\s\\S]*$"
                }
            }
        },
        "com.amazonaws.videoanalytics#NextToken": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[^\\n\\r<>&'\"\\x08]+$"
            }
        },
        "com.amazonaws.videoanalytics#ResourceNotFoundException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 404
            }
        },
        "com.amazonaws.videoanalytics#S3Path": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 2048
                },
                "smithy.api#pattern": "^s3://[a-z0-9][a-z0-9\\.-]{1,61}[a-z0-9](/.*)?$"
            }
        },
        "com.amazonaws.videoanalytics#Status": {
            "type": "enum",
            "members": {
                "RUNNING": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "RUNNING"
                    }
                },
                "COMPLETED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "COMPLETED"
                    }
                },
                "FAILED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "FAILED"
                    }
                },
                "CANCELLED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CANCELLED"
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#length": {
                        "min": 1,
                        "max": 100
                    }
                }
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 100
                },
                "smithy.api#uniqueItems": {}
            }
        },
        "com.amazonaws.videoanalytics#ValidationException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "reason": {
                    "target": "com.amazonaws.videoanalytics#ValidationExceptionReason"
                },
                "fieldList": {
                    "target": "com.amazonaws.videoanalytics#ValidationExceptionFieldList"
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 400
            }
        },
        "com.amazonaws.videoanalytics#ValidationExceptionField": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "message": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics#ValidationExceptionFieldList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.videoanalytics#ValidationExceptionField"
            }
        },
        "com.amazonaws.videoanalytics#ValidationExceptionReason": {
            "type": "enum",
            "members": {
                "UNKNOWN_OPERATION": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "unknownOperation"
                    }
                },
                "CANNOT_PARSE": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "cannotParse"
                    }
                },
                "FIELD_VALIDATION_FAILED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "fieldValidationFailed"
                    }
                },
                "OTHER": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "other"
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#CertificateId": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 64
                },
                "smithy.api#pattern": "^(0x)?[a-fA-F0-9]+$"
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#CloudVideoStreamingElement": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String"
                },
                "status": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#VideoStreamingState"
                },
                "updatedAt": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#CloudVideoStreamingList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#CloudVideoStreamingElement"
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#Device": {
            "type": "resource",
            "operations": [
                {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#GetCreateDeviceStatus"
                },
                {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#StartCreateDevice"
                }
            ]
        },
        "com.amazonaws.videoanalytics.devicemanagement#DeviceConnection": {
            "type": "structure",
            "members": {
                "status": {
                    "target": "smithy.api#Boolean"
                },
                "updatedAt": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#DeviceMetaData": {
            "type": "structure",
            "members": {
                "manufacturer": {
                    "target": "smithy.api#String"
                },
                "model": {
                    "target": "smithy.api#String"
                },
                "mac": {
                    "target": "smithy.api#String"
                },
                "ipAddress": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#IpAddress"
                },
                "aiChipset": {
                    "target": "smithy.api#String"
                },
                "firmwareVersion": {
                    "target": "smithy.api#String"
                },
                "sdkVersion": {
                    "target": "smithy.api#String"
                },
                "aiModelVersion": {
                    "target": "smithy.api#String"
                },
                "aiSdkVersion": {
                    "target": "smithy.api#String"
                },
                "deviceStatus": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#DeviceStatus"
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#DeviceOperations": {
            "type": "resource",
            "operations": [
                {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#GetDevice"
                },
                {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#GetDeviceShadow"
                },
                {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#UpdateDeviceShadow"
                }
            ]
        },
        "com.amazonaws.videoanalytics.devicemanagement#DeviceState": {
            "type": "enum",
            "members": {
                "ENABLED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "ENABLED"
                    }
                },
                "DISABLED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "DISABLED"
                    }
                },
                "CREATED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CREATED"
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#DeviceStatus": {
            "type": "structure",
            "members": {
                "deviceState": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#DeviceState"
                },
                "deviceConnection": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#DeviceConnection"
                },
                "cloudVideoStreaming": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#CloudVideoStreamingList"
                },
                "storage": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#StorageList"
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetCreateDeviceStatus": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#GetCreateDeviceStatusRequest"
            },
            "output": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#GetCreateDeviceStatusResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.videoanalytics#InternalServerException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#ValidationException"
                }
            ],
            "traits": {
                "aws.apigateway#integration": {
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${GetCreateDeviceStatusActivity}/invocations",
                    "credentials": "arn:aws:iam::${AWS::AccountId}:role/DeviceManagementApiGatewayRole"
                },
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/get-create-device-status/{jobId}"
                },
                "smithy.api#idempotent": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetCreateDeviceStatusRequest": {
            "type": "structure",
            "members": {
                "jobId": {
                    "target": "com.amazonaws.videoanalytics#JobId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetCreateDeviceStatusResponse": {
            "type": "structure",
            "members": {
                "jobId": {
                    "target": "com.amazonaws.videoanalytics#JobId"
                },
                "deviceId": {
                    "target": "com.amazonaws.videoanalytics#DeviceId"
                },
                "status": {
                    "target": "com.amazonaws.videoanalytics#Status"
                },
                "createTime": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                },
                "modifiedTime": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                },
                "errorMessage": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetDevice": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#GetDeviceRequest"
            },
            "output": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#GetDeviceResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.videoanalytics#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#InternalServerException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#ValidationException"
                }
            ],
            "traits": {
                "aws.apigateway#integration": {
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${GetDeviceActivity}/invocations",
                    "credentials": "arn:aws:iam::${AWS::AccountId}:role/DeviceManagementApiGatewayRole"
                },
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/get-device/{deviceId}"
                },
                "smithy.api#readonly": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetDeviceRequest": {
            "type": "structure",
            "members": {
                "deviceId": {
                    "target": "com.amazonaws.videoanalytics#DeviceId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetDeviceResponse": {
            "type": "structure",
            "members": {
                "deviceName": {
                    "target": "smithy.api#String"
                },
                "deviceId": {
                    "target": "com.amazonaws.videoanalytics#DeviceId"
                },
                "deviceMetaData": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#DeviceMetaData"
                },
                "deviceSettings": {
                    "target": "com.amazonaws.videoanalytics#KeyValueMap"
                },
                "createdAt": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetDeviceShadow": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#GetDeviceShadowRequest"
            },
            "output": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#GetDeviceShadowResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.videoanalytics#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#InternalServerException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#ValidationException"
                }
            ],
            "traits": {
                "aws.apigateway#integration": {
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${GetDeviceShadowActivity}/invocations",
                    "credentials": "arn:aws:iam::${AWS::AccountId}:role/DeviceManagementApiGatewayRole"
                },
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/get-device-shadow/{deviceId}"
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetDeviceShadowRequest": {
            "type": "structure",
            "members": {
                "deviceId": {
                    "target": "com.amazonaws.videoanalytics#DeviceId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "shadowName": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#ShadowName"
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#GetDeviceShadowResponse": {
            "type": "structure",
            "members": {
                "shadowPayload": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#ShadowMap"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#IpAddress": {
            "type": "structure",
            "members": {
                "publicIpAddress": {
                    "target": "smithy.api#String"
                },
                "privateIpAddress": {
                    "target": "smithy.api#String"
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#ShadowMap": {
            "type": "structure",
            "members": {
                "shadowName": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#ShadowName"
                },
                "stateDocument": {
                    "target": "smithy.api#Document"
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#ShadowName": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 64
                },
                "smithy.api#pattern": "^[a-zA-Z0-9:_\\-]+$"
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#StartCreateDevice": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#StartCreateDeviceRequest"
            },
            "output": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#StartCreateDeviceResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.videoanalytics#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#ConflictException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#InternalServerException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#ResourceNotFoundException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#ValidationException"
                }
            ],
            "traits": {
                "aws.apigateway#integration": {
                    "type": "aws_proxy",
                    "httpMethod": "POST",
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${StartCreateDeviceActivity}/invocations",
                    "credentials": "arn:aws:iam::${AWS::AccountId}:role/DeviceManagementApiGatewayRole"
                },
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/start-create-device/{deviceId}"
                },
                "smithy.api#idempotent": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#StartCreateDeviceRequest": {
            "type": "structure",
            "members": {
                "deviceId": {
                    "target": "com.amazonaws.videoanalytics#DeviceId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "certificateId": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#CertificateId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#StartCreateDeviceResponse": {
            "type": "structure",
            "members": {
                "jobId": {
                    "target": "com.amazonaws.videoanalytics#JobId"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#StorageElement": {
            "type": "structure",
            "members": {
                "status": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#StorageState"
                },
                "totalCapacity": {
                    "target": "smithy.api#String"
                },
                "usedCapacity": {
                    "target": "smithy.api#String"
                },
                "updatedAt": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                },
                "id": {
                    "target": "smithy.api#String"
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#StorageList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#StorageElement"
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#StorageState": {
            "type": "enum",
            "members": {
                "NO_CARD": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "NO_CARD"
                    }
                },
                "ERROR": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "ERROR"
                    }
                },
                "NOT_FORMATTED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "NOT_FORMATTED"
                    }
                },
                "UNMOUNTED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "UNMOUNTED"
                    }
                },
                "FULL": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "FULL"
                    }
                },
                "NORMAL": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "NORMAL"
                    }
                }
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#UpdateDeviceShadow": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#UpdateDeviceShadowRequest"
            },
            "output": {
                "target": "com.amazonaws.videoanalytics.devicemanagement#UpdateDeviceShadowResponse"
            },
            "errors": [
                {
                    "target": "com.amazonaws.videoanalytics#AccessDeniedException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#InternalServerException"
                },
                {
                    "target": "com.amazonaws.videoanalytics#ValidationException"
                }
            ],
            "traits": {
                "aws.apigateway#integration": {
                    "httpMethod": "POST",
                    "type": "aws_proxy",
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${UpdateDeviceShadowActivity}/invocations",
                    "credentials": "arn:aws:iam::${AWS::AccountId}:role/DeviceManagementApiGatewayRole"
                },
                "smithy.api#http": {
                    "code": 200,
                    "method": "POST",
                    "uri": "/update-device-shadow/{deviceId}"
                },
                "smithy.api#idempotent": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#UpdateDeviceShadowRequest": {
            "type": "structure",
            "members": {
                "deviceId": {
                    "target": "com.amazonaws.videoanalytics#DeviceId",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "shadowPayload": {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#ShadowMap"
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#UpdateDeviceShadowResponse": {
            "type": "structure",
            "members": {
                "deviceId": {
                    "target": "com.amazonaws.videoanalytics#DeviceId"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#VideoAnalytic": {
            "type": "service",
            "version": "2024-10-18",
            "resources": [
                {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#Device"
                },
                {
                    "target": "com.amazonaws.videoanalytics.devicemanagement#DeviceOperations"
                }
            ],
            "traits": {
                "aws.protocols#restJson1": {},
                "smithy.api#title": "Video Analytic Guidance Solution - Device Management"
            }
        },
        "com.amazonaws.videoanalytics.devicemanagement#VideoStreamingState": {
            "type": "enum",
            "members": {
                "CONNECTED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "CONNECTED"
                    }
                },
                "DISCONNECTED": {
                    "target": "smithy.api#Unit",
                    "traits": {
                        "smithy.api#enumValue": "DISCONNECTED"
                    }
                }
            }
        },
        "smithy.openapi#SpecificationExtensionKey": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^x-.+$",
                "smithy.api#private": {}
            }
        },
        "smithy.openapi#specificationExtension": {
            "type": "structure",
            "members": {
                "as": {
                    "target": "smithy.openapi#SpecificationExtensionKey",
                    "traits": {
                        "smithy.api#documentation": "Explicitly name the specification extension.\nIf set must begin with `x-`, otherwise defaults to the target trait shape's ID normalized with hyphens and prepended with `x-`."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates a trait shape should be converted into an [OpenAPI specification extension](https://spec.openapis.org/oas/v3.1.0#specification-extensions).",
                "smithy.api#trait": {
                    "selector": "[trait|trait]",
                    "breakingChanges": [
                        {
                            "change": "presence"
                        },
                        {
                            "path": "/as",
                            "change": "any"
                        }
                    ]
                }
            }
        }
    }
}
