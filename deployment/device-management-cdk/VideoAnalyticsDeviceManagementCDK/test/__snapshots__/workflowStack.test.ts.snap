// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkflowStack Snapshot test 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CreateDeviceNotificationTable84D19DAA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "JobId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "JobId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableClass": "STANDARD",
        "TableName": "CreateDeviceNotificationTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "CreateDeviceTableC4C8D097": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "JobId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "JobId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableClass": "STANDARD",
        "TableName": "CreateDeviceTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "CreateNotificationRuleTableB2D81A4D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "JobId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "JobId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableClass": "STANDARD",
        "TableName": "CreateNotificationRuleTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "DeleteDeviceNotificationTable175C08C3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "JobId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "JobId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableClass": "STANDARD",
        "TableName": "DeleteDeviceNotificationTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "GetDeviceCapabilitiesTable983D2EF2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "JobId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "JobId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableClass": "STANDARD",
        "TableName": "GetDeviceCapabilitiesTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartCreateDeviceCreateDeviceLambda9980D98A": {
      "DependsOn": [
        "StartCreateDeviceStartCreateDeviceRole9FDF031A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateDeviceStartCreateDeviceRole9FDF031A",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowcreatedevice.CreateDeviceHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateDeviceCreateDeviceLambdaLogGroup4D35EBFA",
          },
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceStartCreateDeviceRole9FDF031A",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceCreateDeviceLambdaLogGroup4D35EBFA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/CreateDeviceLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceFailCreateDeviceLambda0D6A6176": {
      "DependsOn": [
        "StartCreateDeviceStartCreateDeviceRole9FDF031A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateDeviceStartCreateDeviceRole9FDF031A",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowcreatedevice.FailCreateDeviceHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateDeviceFailCreateDeviceLambdaLogGroupEA1B6434",
          },
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceStartCreateDeviceRole9FDF031A",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceFailCreateDeviceLambdaLogGroupEA1B6434": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/FailCreateDeviceLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceNotificationAddNotificationTopicToShadowLambdaC71D9898": {
      "DependsOn": [
        "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for adding notification topic to the shadow",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazon.awsvideoanalyticsdmcontrolplane.workflow.createdevicenotif.AddNotificationTopicToShadowHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateDeviceNotificationAddNotificationTopicToShadowLambdaLogGroup9726DEC6",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceNotificationAddNotificationTopicToShadowLambdaLogGroup9726DEC6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/AddNotificationTopicToShadowLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceNotificationAttachNotificationPermissionToDeviceCertLambdaADF2C2A1": {
      "DependsOn": [
        "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for attaching notification permission to the device cert",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazon.awsvideoanalyticsdmcontrolplane.workflow.createdevicenotif.AttachNotificationPermissionToDeviceCertHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateDeviceNotificationAttachNotificationPermissionToDeviceCertLambdaLogGroupE8F092B0",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceNotificationAttachNotificationPermissionToDeviceCertLambdaLogGroupE8F092B0": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/AttachNotificationPermissionToDeviceCertLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceNotificationFailCreateDeviceNotificationStatusLambdaB1298612": {
      "DependsOn": [
        "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for marking as failed",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazon.awsvideoanalyticsdmcontrolplane.workflow.createdevicenotif.FailCreateDeviceNotificationStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateDeviceNotificationFailCreateDeviceNotificationStatusLambdaLogGroupDD4AC6E9",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceNotificationFailCreateDeviceNotificationStatusLambdaLogGroupDD4AC6E9": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/FailCreateDeviceNotificationStatusLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                    {
                      "Fn::GetAtt": [
                        "CreateDeviceNotificationTable84D19DAA",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessPolicy",
          },
        ],
        "RoleName": "StartCreateDeviceNotificationRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineFAC6A4AD": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineRoleDefaultPolicy29C40578",
        "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineRoleAF08EFF4",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"AttachNotificationPermissionToDeviceCert","States":{"AttachNotificationPermissionToDeviceCert":{"Next":"AddNotificationTopicToShadow","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateDeviceNotificationStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateDeviceNotificationAttachNotificationPermissionToDeviceCertLambdaADF2C2A1",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"AddNotificationTopicToShadow":{"Next":"UpdateCreateDeviceNotificationStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateDeviceNotificationStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateDeviceNotificationAddNotificationTopicToShadowLambdaC71D9898",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateCreateDeviceNotificationStatus":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateDeviceNotificationStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateDeviceNotificationUpdateCreateDeviceNotificationStatusLambda055B429D",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Successful":{"Type":"Succeed"},"FailCreateDeviceNotificationStatus":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateDeviceNotificationFailCreateDeviceNotificationStatusLambdaB1298612",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey","failureReason.$":"$.error.Cause"}}},"Fail":{"Type":"Fail"}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineRoleAF08EFF4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineRoleAF08EFF4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineRoleDefaultPolicy29C40578": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateDeviceNotificationAttachNotificationPermissionToDeviceCertLambdaADF2C2A1",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateDeviceNotificationAttachNotificationPermissionToDeviceCertLambdaADF2C2A1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateDeviceNotificationAddNotificationTopicToShadowLambdaC71D9898",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateDeviceNotificationAddNotificationTopicToShadowLambdaC71D9898",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateDeviceNotificationUpdateCreateDeviceNotificationStatusLambda055B429D",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateDeviceNotificationUpdateCreateDeviceNotificationStatusLambda055B429D",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateDeviceNotificationFailCreateDeviceNotificationStatusLambdaB1298612",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateDeviceNotificationFailCreateDeviceNotificationStatusLambdaB1298612",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineRoleDefaultPolicy29C40578",
        "Roles": [
          {
            "Ref": "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineRoleAF08EFF4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartCreateDeviceNotificationUpdateCreateDeviceNotificationStatusLambda055B429D": {
      "DependsOn": [
        "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating the state of the Create Device Notification Job",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazon.awsvideoanalyticsdmcontrolplane.workflow.createdevicenotif.UpdateCreateDeviceNotificationStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateDeviceNotificationUpdateCreateDeviceNotificationStatusLambdaLogGroup1E8FF604",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceNotificationStartCreateDeviceNotificationRole792E3432",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceNotificationUpdateCreateDeviceNotificationStatusLambdaLogGroup1E8FF604": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/UpdateCreateDeviceNotificationStatusLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamDLQ402A4AB8": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamDlqEncryptionKey12E630A3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamDlqEncryptionKey12E630A3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamProcessor5489BF2C": {
      "DependsOn": [
        "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableDDBStreamProcessorLambdaRoleDefaultPolicyFDCEC7AE",
        "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableDDBStreamProcessorLambdaRole3CAB679D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "341f6632ee9eb419b58e12dc9159f57f2126fc1f7138a2bc67a407a28ec38fbe.zip",
        },
        "Description": "Lambda responsible for invocation of StepFunction",
        "Environment": {
          "Variables": {
            "PARTITION_KEY": "JobId",
            "SORT_KEY": "",
            "STATE_MACHINE_ARN": {
              "Ref": "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineFAC6A4AD",
            },
          },
        },
        "Handler": "com.amazon.aws.videoanalytics.common.workflow.StreamProcessor::handleRequest",
        "MemorySize": 1028,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableDDBStreamProcessorLambdaRole3CAB679D",
            "Arn",
          ],
        },
        "Runtime": "java17",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamProcessorDynamoDBEventSourceMyTestStackCreateDeviceNotificationTable55F45EF82DDB61AA": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamDLQ402A4AB8",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "CreateDeviceNotificationTable84D19DAA",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamProcessor5489BF2C",
        },
        "MaximumRetryAttempts": 2,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableDDBStreamProcessorLambdaRole3CAB679D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableDDBStreamProcessorLambdaRoleDefaultPolicyFDCEC7AE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StartCreateDeviceNotificationStartCreateDeviceNotificationStateMachineFAC6A4AD",
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamDLQ402A4AB8",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableCreateDeviceNotificationTableStreamDlqEncryptionKey12E630A3",
                  "Arn",
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CreateDeviceNotificationTable84D19DAA",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableDDBStreamProcessorLambdaRoleDefaultPolicyFDCEC7AE",
        "Roles": [
          {
            "Ref": "StartCreateDeviceNotificationWorkflowCreateDeviceNotificationTableDDBStreamProcessorLambdaRole3CAB679D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartCreateDeviceSetLoggerConfigLambdaA0263FA9": {
      "DependsOn": [
        "StartCreateDeviceStartCreateDeviceRole9FDF031A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateDeviceStartCreateDeviceRole9FDF031A",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowcreatedevice.SetLoggerConfigHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateDeviceSetLoggerConfigLambdaLogGroup5FD04A2D",
          },
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceStartCreateDeviceRole9FDF031A",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceSetLoggerConfigLambdaLogGroup5FD04A2D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/SetLoggerConfigLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceStartCreateDeviceRole9FDF031A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iot:DescribeThingGroup",
                    "iot:AddThingToThingGroup",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:iot:us-east-1:123456789012:thinggroup/*",
                },
                {
                  "Action": [
                    "iot:DescribeCertificate",
                    "iot:AttachThingPrincipal",
                    "iot:UpdateCertificate",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:iot:us-east-1:123456789012:cert/*",
                },
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                    {
                      "Fn::GetAtt": [
                        "CreateDeviceTableC4C8D097",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessPolicy",
          },
        ],
        "RoleName": "StartCreateDeviceRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateDeviceStartCreateDeviceStateMachine140D55D1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StartCreateDeviceStartCreateDeviceStateMachineRoleDefaultPolicyC56538DD",
        "StartCreateDeviceStartCreateDeviceStateMachineRoleE4B4ECA8",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"CreateDevice","States":{"CreateDevice":{"Next":"SetLoggerConfig","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateDevice"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateDeviceCreateDeviceLambda9980D98A",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"SetLoggerConfig":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateDevice"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateDeviceSetLoggerConfigLambdaA0263FA9",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Successful":{"Type":"Succeed"},"FailCreateDevice":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateDeviceFailCreateDeviceLambda0D6A6176",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey","failureReason.$":"$.error.Cause"}}},"Fail":{"Type":"Fail"}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StartCreateDeviceStartCreateDeviceStateMachineRoleE4B4ECA8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StartCreateDeviceStartCreateDeviceStateMachineRoleDefaultPolicyC56538DD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateDeviceCreateDeviceLambda9980D98A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateDeviceCreateDeviceLambda9980D98A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateDeviceSetLoggerConfigLambdaA0263FA9",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateDeviceSetLoggerConfigLambdaA0263FA9",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateDeviceFailCreateDeviceLambda0D6A6176",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateDeviceFailCreateDeviceLambda0D6A6176",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartCreateDeviceStartCreateDeviceStateMachineRoleDefaultPolicyC56538DD",
        "Roles": [
          {
            "Ref": "StartCreateDeviceStartCreateDeviceStateMachineRoleE4B4ECA8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartCreateDeviceStartCreateDeviceStateMachineRoleE4B4ECA8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamDLQ11CED7D4": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamDlqEncryptionKey3B709AC2",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamDlqEncryptionKey3B709AC2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamProcessorD61E4E44": {
      "DependsOn": [
        "StartCreateDeviceWorkflowCreateDeviceTableDDBStreamProcessorLambdaRoleDefaultPolicy6109FD44",
        "StartCreateDeviceWorkflowCreateDeviceTableDDBStreamProcessorLambdaRoleB0B1ECBD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "341f6632ee9eb419b58e12dc9159f57f2126fc1f7138a2bc67a407a28ec38fbe.zip",
        },
        "Description": "Lambda responsible for invocation of StepFunction",
        "Environment": {
          "Variables": {
            "PARTITION_KEY": "JobId",
            "SORT_KEY": "",
            "STATE_MACHINE_ARN": {
              "Ref": "StartCreateDeviceStartCreateDeviceStateMachine140D55D1",
            },
          },
        },
        "Handler": "com.amazon.aws.videoanalytics.common.workflow.StreamProcessor::handleRequest",
        "MemorySize": 1028,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateDeviceWorkflowCreateDeviceTableDDBStreamProcessorLambdaRoleB0B1ECBD",
            "Arn",
          ],
        },
        "Runtime": "java17",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamProcessorDynamoDBEventSourceMyTestStackCreateDeviceTable08B1D5AADB18D98F": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamDLQ11CED7D4",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "CreateDeviceTableC4C8D097",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamProcessorD61E4E44",
        },
        "MaximumRetryAttempts": 2,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "StartCreateDeviceWorkflowCreateDeviceTableDDBStreamProcessorLambdaRoleB0B1ECBD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateDeviceWorkflowCreateDeviceTableDDBStreamProcessorLambdaRoleDefaultPolicy6109FD44": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StartCreateDeviceStartCreateDeviceStateMachine140D55D1",
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamDLQ11CED7D4",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartCreateDeviceWorkflowCreateDeviceTableCreateDeviceTableStreamDlqEncryptionKey3B709AC2",
                  "Arn",
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CreateDeviceTableC4C8D097",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartCreateDeviceWorkflowCreateDeviceTableDDBStreamProcessorLambdaRoleDefaultPolicy6109FD44",
        "Roles": [
          {
            "Ref": "StartCreateDeviceWorkflowCreateDeviceTableDDBStreamProcessorLambdaRoleB0B1ECBD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartCreateNotificationRuleCreateIotRuleLambdaD2DC4F15": {
      "DependsOn": [
        "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for creating an IoT Rule",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowcreatenotifrule.CreateIotRuleHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateNotificationRuleCreateIotRuleLambdaLogGroup32F79E7F",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateNotificationRuleCreateIotRuleLambdaLogGroup32F79E7F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/CreateIotRuleLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateNotificationRuleFailCreateNotificationRuleStatusLambda6BF55B43": {
      "DependsOn": [
        "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for marking as failed",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowcreatenotifrule.FailCreateNotificationRuleStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateNotificationRuleFailCreateNotificationRuleStatusLambdaLogGroupC7FC3D2B",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateNotificationRuleFailCreateNotificationRuleStatusLambdaLogGroupC7FC3D2B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/FailCreateNotificationRuleStatusLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                    {
                      "Fn::GetAtt": [
                        "CreateNotificationRuleTableB2D81A4D",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessPolicy",
          },
        ],
        "RoleName": "StartCreateNotificationRuleRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineCB7410A4": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineRoleDefaultPolicyD953B4D9",
        "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineRole4D6C43AD",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"CreateIotRule","States":{"CreateIotRule":{"Next":"UpdateCreateNotificationRuleStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateNotificationRuleStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateNotificationRuleCreateIotRuleLambdaD2DC4F15",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateCreateNotificationRuleStatus":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateNotificationRuleStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateNotificationRuleUpdateCreateNotificationRuleStatusLambdaBD694D5F",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Successful":{"Type":"Succeed"},"FailCreateNotificationRuleStatus":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartCreateNotificationRuleFailCreateNotificationRuleStatusLambda6BF55B43",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey","failureReason.$":"$.error.Cause"}}},"Fail":{"Type":"Fail"}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineRole4D6C43AD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineRole4D6C43AD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineRoleDefaultPolicyD953B4D9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateNotificationRuleCreateIotRuleLambdaD2DC4F15",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateNotificationRuleCreateIotRuleLambdaD2DC4F15",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateNotificationRuleUpdateCreateNotificationRuleStatusLambdaBD694D5F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateNotificationRuleUpdateCreateNotificationRuleStatusLambdaBD694D5F",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartCreateNotificationRuleFailCreateNotificationRuleStatusLambda6BF55B43",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartCreateNotificationRuleFailCreateNotificationRuleStatusLambda6BF55B43",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineRoleDefaultPolicyD953B4D9",
        "Roles": [
          {
            "Ref": "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineRole4D6C43AD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartCreateNotificationRuleUpdateCreateNotificationRuleStatusLambdaBD694D5F": {
      "DependsOn": [
        "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating the state of the Create Notification Rule Job",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowcreatenotifrule.UpdateCreateNotificationRuleStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartCreateNotificationRuleUpdateCreateNotificationRuleStatusLambdaLogGroup3E0C4DB1",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateNotificationRuleStartCreateNotificationRuleRoleDEC719C2",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateNotificationRuleUpdateCreateNotificationRuleStatusLambdaLogGroup3E0C4DB1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/UpdateCreateNotificationRuleStatusLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamDLQ09E09A0F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamDlqEncryptionKey2A9B36E5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamDlqEncryptionKey2A9B36E5": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamProcessorB539D3AE": {
      "DependsOn": [
        "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableDDBStreamProcessorLambdaRoleDefaultPolicy495E056B",
        "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableDDBStreamProcessorLambdaRole5C02ED07",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "341f6632ee9eb419b58e12dc9159f57f2126fc1f7138a2bc67a407a28ec38fbe.zip",
        },
        "Description": "Lambda responsible for invocation of StepFunction",
        "Environment": {
          "Variables": {
            "PARTITION_KEY": "JobId",
            "SORT_KEY": "",
            "STATE_MACHINE_ARN": {
              "Ref": "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineCB7410A4",
            },
          },
        },
        "Handler": "com.amazon.aws.videoanalytics.common.workflow.StreamProcessor::handleRequest",
        "MemorySize": 1028,
        "Role": {
          "Fn::GetAtt": [
            "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableDDBStreamProcessorLambdaRole5C02ED07",
            "Arn",
          ],
        },
        "Runtime": "java17",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamProcessorDynamoDBEventSourceMyTestStackCreateNotificationRuleTable5092E50FFA4342FF": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamDLQ09E09A0F",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "CreateNotificationRuleTableB2D81A4D",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamProcessorB539D3AE",
        },
        "MaximumRetryAttempts": 2,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableDDBStreamProcessorLambdaRole5C02ED07": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableDDBStreamProcessorLambdaRoleDefaultPolicy495E056B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StartCreateNotificationRuleStartCreateNotificationRuleStateMachineCB7410A4",
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamDLQ09E09A0F",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableCreateNotificationRuleTableStreamDlqEncryptionKey2A9B36E5",
                  "Arn",
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CreateNotificationRuleTableB2D81A4D",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableDDBStreamProcessorLambdaRoleDefaultPolicy495E056B",
        "Roles": [
          {
            "Ref": "StartCreateNotificationRuleWorkflowCreateNotificationRuleTableDDBStreamProcessorLambdaRole5C02ED07",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartDeleteDeviceNotificationDetachNotificationPermissionFromDeviceCertLambda5CC850D2": {
      "DependsOn": [
        "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for detaching notification permission from the device cert",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowdeletedevicenotif.DetachNotificationPermissionFromDeviceCertHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartDeleteDeviceNotificationDetachNotificationPermissionFromDeviceCertLambdaLogGroup2A296E72",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartDeleteDeviceNotificationDetachNotificationPermissionFromDeviceCertLambdaLogGroup2A296E72": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "DetachNotificationPermissionFromDeviceCertLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartDeleteDeviceNotificationFailDeleteDeviceNotificationStatusLambdaBE3EB402": {
      "DependsOn": [
        "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for marking as failed",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowdeletedevicenotif.FailDeleteDeviceNotificationStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartDeleteDeviceNotificationFailDeleteDeviceNotificationStatusLambdaLogGroup06D6A580",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartDeleteDeviceNotificationFailDeleteDeviceNotificationStatusLambdaLogGroup06D6A580": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "FailDeleteDeviceNotificationStatusLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartDeleteDeviceNotificationRemoveNotificationTopicFromShadowLambda705FEF41": {
      "DependsOn": [
        "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for removing notification topic from the shadow",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowdeletedevicenotif.RemoveNotificationTopicFromShadowHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartDeleteDeviceNotificationRemoveNotificationTopicFromShadowLambdaLogGroup69F61D3A",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartDeleteDeviceNotificationRemoveNotificationTopicFromShadowLambdaLogGroup69F61D3A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "RemoveNotificationTopicFromShadowLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                    {
                      "Fn::GetAtt": [
                        "DeleteDeviceNotificationTable175C08C3",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessPolicy",
          },
        ],
        "RoleName": "StartDeleteDeviceNotificationRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineBE147FFB": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineRoleDefaultPolicy243BB653",
        "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineRole8CE84ABC",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"DetachNotificationPermissionFromDeviceCert","States":{"DetachNotificationPermissionFromDeviceCert":{"Next":"RemoveNotificationTopicFromShadow","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailDeleteDeviceNotificationStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartDeleteDeviceNotificationDetachNotificationPermissionFromDeviceCertLambda5CC850D2",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"RemoveNotificationTopicFromShadow":{"Next":"UpdateDeleteDeviceNotificationStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailDeleteDeviceNotificationStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartDeleteDeviceNotificationRemoveNotificationTopicFromShadowLambda705FEF41",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateDeleteDeviceNotificationStatus":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailDeleteDeviceNotificationStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartDeleteDeviceNotificationUpdateDeleteDeviceNotificationStatusLambdaAF48EE80",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Successful":{"Type":"Succeed"},"FailDeleteDeviceNotificationStatus":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartDeleteDeviceNotificationFailDeleteDeviceNotificationStatusLambdaBE3EB402",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey","failureReason.$":"$.error.Cause"}}},"Fail":{"Type":"Fail"}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineRole8CE84ABC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineRole8CE84ABC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineRoleDefaultPolicy243BB653": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartDeleteDeviceNotificationDetachNotificationPermissionFromDeviceCertLambda5CC850D2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartDeleteDeviceNotificationDetachNotificationPermissionFromDeviceCertLambda5CC850D2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartDeleteDeviceNotificationRemoveNotificationTopicFromShadowLambda705FEF41",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartDeleteDeviceNotificationRemoveNotificationTopicFromShadowLambda705FEF41",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartDeleteDeviceNotificationUpdateDeleteDeviceNotificationStatusLambdaAF48EE80",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartDeleteDeviceNotificationUpdateDeleteDeviceNotificationStatusLambdaAF48EE80",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartDeleteDeviceNotificationFailDeleteDeviceNotificationStatusLambdaBE3EB402",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartDeleteDeviceNotificationFailDeleteDeviceNotificationStatusLambdaBE3EB402",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineRoleDefaultPolicy243BB653",
        "Roles": [
          {
            "Ref": "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineRole8CE84ABC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartDeleteDeviceNotificationUpdateDeleteDeviceNotificationStatusLambdaAF48EE80": {
      "DependsOn": [
        "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating the state of the Delete Device Notification Job",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowdeletedevicenotif.UpdateDeleteDeviceNotificationStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartDeleteDeviceNotificationUpdateDeleteDeviceNotificationStatusLambdaLogGroup4702951F",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartDeleteDeviceNotificationStartDeleteDeviceNotificationRole4B715B39",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartDeleteDeviceNotificationUpdateDeleteDeviceNotificationStatusLambdaLogGroup4702951F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "UpdateDeleteDeviceNotificationStatusLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDDBStreamProcessorLambdaRole1E1C9EA4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDDBStreamProcessorLambdaRoleDefaultPolicyD8BA5090": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineBE147FFB",
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamDLQ532C53AF",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamDlqEncryptionKey3A0043AC",
                  "Arn",
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DeleteDeviceNotificationTable175C08C3",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDDBStreamProcessorLambdaRoleDefaultPolicyD8BA5090",
        "Roles": [
          {
            "Ref": "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDDBStreamProcessorLambdaRole1E1C9EA4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamDLQ532C53AF": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamDlqEncryptionKey3A0043AC",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamDlqEncryptionKey3A0043AC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamProcessorA82B7180": {
      "DependsOn": [
        "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDDBStreamProcessorLambdaRoleDefaultPolicyD8BA5090",
        "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDDBStreamProcessorLambdaRole1E1C9EA4",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "341f6632ee9eb419b58e12dc9159f57f2126fc1f7138a2bc67a407a28ec38fbe.zip",
        },
        "Description": "Lambda responsible for invocation of StepFunction",
        "Environment": {
          "Variables": {
            "PARTITION_KEY": "JobId",
            "SORT_KEY": "",
            "STATE_MACHINE_ARN": {
              "Ref": "StartDeleteDeviceNotificationStartDeleteDeviceNotificationStateMachineBE147FFB",
            },
          },
        },
        "Handler": "com.amazon.aws.videoanalytics.common.workflow.StreamProcessor::handleRequest",
        "MemorySize": 1028,
        "Role": {
          "Fn::GetAtt": [
            "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDDBStreamProcessorLambdaRole1E1C9EA4",
            "Arn",
          ],
        },
        "Runtime": "java17",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamProcessorDynamoDBEventSourceMyTestStackDeleteDeviceNotificationTable12702876D0344F22": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamDLQ532C53AF",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "DeleteDeviceNotificationTable175C08C3",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "StartDeleteDeviceNotificationWorkflowDeleteDeviceNotificationTableDeleteDeviceNotificationTableStreamProcessorA82B7180",
        },
        "MaximumRetryAttempts": 2,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "StartGetDeviceCapabilitiesFailGetCapabilitiesLambda7DC3C46E": {
      "DependsOn": [
        "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda to handle get device capabilities failure",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowworkflow.index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartGetDeviceCapabilitiesFailGetCapabilitiesLambdaLogGroup93528228",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartGetDeviceCapabilitiesFailGetCapabilitiesLambdaLogGroup93528228": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/FailGetCapabilitiesLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartGetDeviceCapabilitiesGetCapabilitiesLambda2FBF370E": {
      "DependsOn": [
        "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda to get device capabilities",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowworkflow.index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartGetDeviceCapabilitiesGetCapabilitiesLambdaLogGroup46239571",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartGetDeviceCapabilitiesGetCapabilitiesLambdaLogGroup46239571": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/GetCapabilitiesLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                    {
                      "Fn::GetAtt": [
                        "GetDeviceCapabilitiesTable983D2EF2",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessPolicy",
          },
        ],
        "RoleName": "GetDeviceCapabilitiesRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachine9D37416F": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachineRoleDefaultPolicy8CB63D85",
        "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachineRoleA2ACF299",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"RequestCapabilities","States":{"RequestCapabilities":{"Next":"GetCapabilities","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailGetCapabilities"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartGetDeviceCapabilitiesRequestCapabilitiesLambda0ACFEE6B",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"GetCapabilities":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":34,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailGetCapabilities"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartGetDeviceCapabilitiesGetCapabilitiesLambda2FBF370E",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Successful":{"Type":"Succeed"},"FailGetCapabilities":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartGetDeviceCapabilitiesFailGetCapabilitiesLambda7DC3C46E",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey","failureReason.$":"$.error.Cause"}}},"Fail":{"Type":"Fail"}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachineRoleA2ACF299",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachineRoleA2ACF299": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachineRoleDefaultPolicy8CB63D85": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartGetDeviceCapabilitiesRequestCapabilitiesLambda0ACFEE6B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartGetDeviceCapabilitiesRequestCapabilitiesLambda0ACFEE6B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartGetDeviceCapabilitiesGetCapabilitiesLambda2FBF370E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartGetDeviceCapabilitiesGetCapabilitiesLambda2FBF370E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartGetDeviceCapabilitiesFailGetCapabilitiesLambda7DC3C46E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartGetDeviceCapabilitiesFailGetCapabilitiesLambda7DC3C46E",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachineRoleDefaultPolicy8CB63D85",
        "Roles": [
          {
            "Ref": "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachineRoleA2ACF299",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartGetDeviceCapabilitiesRequestCapabilitiesLambda0ACFEE6B": {
      "DependsOn": [
        "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda to request device capabilities",
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": "123456789012",
            "LAMBDA_ROLE_ARN": {
              "Fn::GetAtt": [
                "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowworkflow.index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartGetDeviceCapabilitiesRequestCapabilitiesLambdaLogGroup6A400300",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartGetDeviceCapabilitiesGetDeviceCapabilitiesRole4E893337",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartGetDeviceCapabilitiesRequestCapabilitiesLambdaLogGroup6A400300": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/lambda/RequestCapabilitiesLambda",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableDDBStreamProcessorLambdaRoleDefaultPolicy14197F98": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachine9D37416F",
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamDLQ019E1D2B",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamDlqEncryptionKeyE9EEE1C1",
                  "Arn",
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "GetDeviceCapabilitiesTable983D2EF2",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableDDBStreamProcessorLambdaRoleDefaultPolicy14197F98",
        "Roles": [
          {
            "Ref": "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableDDBStreamProcessorLambdaRoleECDFD088",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableDDBStreamProcessorLambdaRoleECDFD088": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamDLQ019E1D2B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamDlqEncryptionKeyE9EEE1C1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamDlqEncryptionKeyE9EEE1C1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamProcessorA9BD9FF3": {
      "DependsOn": [
        "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableDDBStreamProcessorLambdaRoleDefaultPolicy14197F98",
        "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableDDBStreamProcessorLambdaRoleECDFD088",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "341f6632ee9eb419b58e12dc9159f57f2126fc1f7138a2bc67a407a28ec38fbe.zip",
        },
        "Description": "Lambda responsible for invocation of StepFunction",
        "Environment": {
          "Variables": {
            "PARTITION_KEY": "JobId",
            "SORT_KEY": "",
            "STATE_MACHINE_ARN": {
              "Ref": "StartGetDeviceCapabilitiesGetDeviceCapabilitiesStateMachine9D37416F",
            },
          },
        },
        "Handler": "com.amazon.aws.videoanalytics.common.workflow.StreamProcessor::handleRequest",
        "MemorySize": 1028,
        "Role": {
          "Fn::GetAtt": [
            "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableDDBStreamProcessorLambdaRoleECDFD088",
            "Arn",
          ],
        },
        "Runtime": "java17",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamProcessorDynamoDBEventSourceMyTestStackGetDeviceCapabilitiesTableB969E9B1C75AD054": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamDLQ019E1D2B",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "GetDeviceCapabilitiesTable983D2EF2",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "StartGetDeviceCapabilitiesWorkflowGetDeviceCapabilitiesTableGetDeviceCapabilitiesTableStreamProcessorA9BD9FF3",
        },
        "MaximumRetryAttempts": 2,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "StartUpdateDeviceAttachKvsAccessToCertLambda58E5D53A": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for attaching cert to KVS Roles policy.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.AttachKvsAccessToCertHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceAttachKvsAccessToCertLambdaLogGroup49A296B4",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceAttachKvsAccessToCertLambdaLogGroup49A296B4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "AttachKvsAccessToCertLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceCheckIotDownloadJobStatusLambda4230032B": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for checking IoT Job status for the download file job.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.CheckIotDownloadJobStatusHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceCheckIotDownloadJobStatusLambdaLogRetention319064CB": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceCheckIotDownloadJobStatusLambda4230032B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceCheckIotInstallApplicationJobStatusLambdaCA57CD0B": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for checking IoT Job status for the install application job.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.CheckIotInstallApplicationJobStatusHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceCheckIotInstallApplicationJobStatusLambdaLogRetention41865067": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceCheckIotInstallApplicationJobStatusLambdaCA57CD0B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceCheckIotJobStatusLambda0C80BB0B": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for checking IoT Job status.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.CheckIotJobStatusHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceCheckIotJobStatusLambdaLogRetention6FBC42B3": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceCheckIotJobStatusLambda0C80BB0B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceCreateCommandIotJobLambda577AB042": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for creating an IoT Job for a given device command.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.CreateCommandIotJobHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceCreateCommandIotJobLambdaLogRetention5DF07941": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceCreateCommandIotJobLambda577AB042",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceCreateDownloadFileIotJobLambda77D016C2": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for creating an IoT Job to download a file.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.CreateDownloadFileIotJobHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceCreateDownloadFileIotJobLambdaLogRetentionCDD94C0A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceCreateDownloadFileIotJobLambda77D016C2",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceCreateInstallApplicationIotJobLambdaD8C8B4C0": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for creating an IoT Job to install an application.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.CreateInstallApplicationIotJobHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceCreateInstallApplicationIotJobLambdaLogRetention15DC085E": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceCreateInstallApplicationIotJobLambdaD8C8B4C0",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceCreateKVSStreamLambdaDFBE7574": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda to create KVS Stream using FVL API.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.CreateKVSStreamHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceCreateKVSStreamLambdaLogGroup782B2664",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceCreateKVSStreamLambdaLogGroup782B2664": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "CreateKVSStreamLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceDetachKvsAccessToCertLambda0EFDA474": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for detaching cert to KVS Roles policy.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.DetachKvsAccessFromCertHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceDetachKvsAccessToCertLambdaLogGroupDD156502",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceDetachKvsAccessToCertLambdaLogGroupDD156502": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "DetachKvsAccessToCertLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceDetermineCommandTypeLambdaDFD4D9D0": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for determining what commandType a given commandPayload is. If it is an update operation, proceed to createDownloadFileIotJob",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.DetermineCommandTypeHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceDetermineCommandTypeLambdaLogRetention1CEE4852": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceDetermineCommandTypeLambdaDFD4D9D0",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceDetermineIsDeviceStateLambdaBA04215C": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for determine new state is registered or not. If its registered, proceed to get device capabilities",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.DetermineDeviceStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceDetermineIsDeviceStateLambdaLogGroupE0366EEA",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceDetermineIsDeviceStateLambdaLogGroupE0366EEA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "DetermineIsDeviceStateLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceDetermineUpdateTypeLambda98551A3B": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for determining if device update is commandPayload type or not. If it is command operation, proceed to sendCommand",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.DetermineUpdateTypeHandler::handleRequest",
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceDetermineUpdateTypeLambdaLogRetention07DAFA31": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "StartUpdateDeviceDetermineUpdateTypeLambda98551A3B",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "StartUpdateDeviceFVLWorkflowCheckerLambdaE24F84FC": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for checking to make sure fvl device registration workflow completes.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.FVLWorkflowCheckerHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceFVLWorkflowCheckerLambdaLogGroup3CB8F5DE",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceFVLWorkflowCheckerLambdaLogGroup3CB8F5DE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "FVLWorkflowCheckerLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceFailUpdateStatusLambda06AAF257": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for marking as failed",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.FailUpdateStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceFailUpdateStatusLambdaLogGroup9ECD9FE5",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceFailUpdateStatusLambdaLogGroup9ECD9FE5": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "FailUpdateStatusLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceMessageDeviceLambda7ECDFD36": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda sends message to device.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.MessageDeviceHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceMessageDeviceLambdaLogGroupC3155447",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceMessageDeviceLambdaLogGroupC3155447": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "MessageDeviceLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDevicePublishConfigurationsToShadowLambdaF54EA34B": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Publish configurations to their respective shadow",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.PublishConfigurationsToShadowHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDevicePublishConfigurationsToShadowLambdaLogGroup5363F1D1",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDevicePublishConfigurationsToShadowLambdaLogGroup5363F1D1": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "PublishConfigurationsToShadowLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDevicePublishDeviceStateEventHandlerLambdaF9988472": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for publishing new device state",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.PublishDeviceStateEventHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDevicePublishDeviceStateEventHandlerLambdaLogGroupE840ADDD",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDevicePublishDeviceStateEventHandlerLambdaLogGroupE840ADDD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "PublishDeviceStateEventHandlerLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                    {
                      "Fn::GetAtt": [
                        "UpdateDeviceTable478836CD",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessPolicy",
          },
        ],
        "RoleName": "StartCreateDeviceNotificationRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartUpdateDeviceStartUpdateDeviceStateMachine184A2679": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StartUpdateDeviceStartUpdateDeviceStateMachineRoleDefaultPolicyCF81A0F8",
        "StartUpdateDeviceStartUpdateDeviceStateMachineRole9A44B539",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"DetermineUpdateType","States":{"DetermineUpdateType":{"Next":"UpdateTypeStateChoice","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.isCommand","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceDetermineUpdateTypeLambda98551A3B",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateTypeStateChoice":{"Type":"Choice","Choices":[{"Variable":"$.isCommand.Payload","StringEquals":"COMMAND","Next":"DetermineCommandType"}],"Default":"PublishConfigurationsToShadow"},"PublishConfigurationsToShadow":{"Next":"NotifyDevice","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDevicePublishConfigurationsToShadowLambdaF54EA34B",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"NotifyDevice":{"Next":"determineDeviceState","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceMessageDeviceLambda7ECDFD36",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"determineDeviceState":{"Next":"StateChoice","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.isRegistered","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceDetermineIsDeviceStateLambdaBA04215C",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"StateChoice":{"Type":"Choice","Choices":[{"Variable":"$.isRegistered.Payload","StringEquals":"ENABLED","Next":"CreateKVSStream"},{"Variable":"$.isRegistered.Payload","StringEquals":"DISABLED","Next":"DetachKvsAccessToCert"},{"Variable":"$.isRegistered.Payload","StringEquals":"CREATED","Next":"DetachKvsAccessToCert"}],"Default":"PublishUpdateStatus"},"PublishUpdateStatus":{"Next":"UpdateUpdateStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDevicePublishDeviceStateEventHandlerLambdaF9988472",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"DetachKvsAccessToCert":{"Next":"PublishUpdateStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceDetachKvsAccessToCertLambda0EFDA474",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"FailUpdateStatus":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceFailUpdateStatusLambda06AAF257",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey","failureReason.$":"$.error.Cause"}}},"DetermineCommandType":{"Next":"CommandTypeStateChoice","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.isSoftwareUpdate","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceDetermineCommandTypeLambdaDFD4D9D0",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"CommandTypeStateChoice":{"Type":"Choice","Choices":[{"Variable":"$.isSoftwareUpdate.Payload","StringEquals":"SOFTWARE_UPDATE","Next":"CreateDownloadFileIotJob"}],"Default":"CreateCommandIotJob"},"CreateCommandIotJob":{"Next":"CheckIotJobStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceCreateCommandIotJobLambda577AB042",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"CheckIotJobStatus":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":60,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceCheckIotJobStatusLambda0C80BB0B",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Successful":{"Type":"Succeed"},"CheckIotInstallApplicationJobStatus":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":60,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceCheckIotInstallApplicationJobStatusLambdaCA57CD0B",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"CreateInstallApplicationIotJob":{"Next":"CheckIotInstallApplicationJobStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceCreateInstallApplicationIotJobLambdaD8C8B4C0",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"CheckIotDownloadJobStatus":{"Next":"CreateInstallApplicationIotJob","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":60,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceCheckIotDownloadJobStatusLambda4230032B",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"CreateDownloadFileIotJob":{"Next":"CheckIotDownloadJobStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceCreateDownloadFileIotJobLambda77D016C2",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateDeviceGroup":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceUpdateDeviceGroupLambda2781EA19",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateDeviceType":{"Next":"UpdateDeviceGroup","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceUpdateDeviceTypeLambdaC1F062E2",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateUpdateStatus":{"Next":"UpdateDeviceType","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceUpdateUpdateStatusLambda8D89EED0",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"CreateKVSStream":{"Next":"FvlWorkflowChecker","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceCreateKVSStreamLambdaDFBE7574",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"FvlWorkflowChecker":{"Next":"AttachKvsAccessToCert","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":34,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceFVLWorkflowCheckerLambdaE24F84FC",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"AttachKvsAccessToCert":{"Next":"PublishUpdateStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailUpdateStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateDeviceAttachKvsAccessToCertLambda58E5D53A",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Fail":{"Type":"Fail"}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartUpdateDeviceStateMachineRole9A44B539",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StartUpdateDeviceStartUpdateDeviceStateMachineRole9A44B539": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StartUpdateDeviceStartUpdateDeviceStateMachineRoleDefaultPolicyCF81A0F8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceDetermineUpdateTypeLambda98551A3B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceDetermineUpdateTypeLambda98551A3B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDevicePublishConfigurationsToShadowLambdaF54EA34B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDevicePublishConfigurationsToShadowLambdaF54EA34B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceMessageDeviceLambda7ECDFD36",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceMessageDeviceLambda7ECDFD36",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceDetermineIsDeviceStateLambdaBA04215C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceDetermineIsDeviceStateLambdaBA04215C",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDevicePublishDeviceStateEventHandlerLambdaF9988472",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDevicePublishDeviceStateEventHandlerLambdaF9988472",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceDetachKvsAccessToCertLambda0EFDA474",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceDetachKvsAccessToCertLambda0EFDA474",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceFailUpdateStatusLambda06AAF257",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceFailUpdateStatusLambda06AAF257",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceDetermineCommandTypeLambdaDFD4D9D0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceDetermineCommandTypeLambdaDFD4D9D0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceCreateCommandIotJobLambda577AB042",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceCreateCommandIotJobLambda577AB042",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceCheckIotJobStatusLambda0C80BB0B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceCheckIotJobStatusLambda0C80BB0B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceCheckIotInstallApplicationJobStatusLambdaCA57CD0B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceCheckIotInstallApplicationJobStatusLambdaCA57CD0B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceCreateInstallApplicationIotJobLambdaD8C8B4C0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceCreateInstallApplicationIotJobLambdaD8C8B4C0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceCheckIotDownloadJobStatusLambda4230032B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceCheckIotDownloadJobStatusLambda4230032B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceCreateDownloadFileIotJobLambda77D016C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceCreateDownloadFileIotJobLambda77D016C2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceUpdateDeviceGroupLambda2781EA19",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceUpdateDeviceGroupLambda2781EA19",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceUpdateDeviceTypeLambdaC1F062E2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceUpdateDeviceTypeLambdaC1F062E2",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceUpdateUpdateStatusLambda8D89EED0",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceUpdateUpdateStatusLambda8D89EED0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceCreateKVSStreamLambdaDFBE7574",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceCreateKVSStreamLambdaDFBE7574",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceFVLWorkflowCheckerLambdaE24F84FC",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceFVLWorkflowCheckerLambdaE24F84FC",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateDeviceAttachKvsAccessToCertLambda58E5D53A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateDeviceAttachKvsAccessToCertLambda58E5D53A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartUpdateDeviceStartUpdateDeviceStateMachineRoleDefaultPolicyCF81A0F8",
        "Roles": [
          {
            "Ref": "StartUpdateDeviceStartUpdateDeviceStateMachineRole9A44B539",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartUpdateDeviceUpdateDeviceGroupLambda2781EA19": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating device thing group if device group payload present.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.DeviceGroupPayloadHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceUpdateDeviceGroupLambdaLogGroup572829AE",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceUpdateDeviceGroupLambdaLogGroup572829AE": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "UpdateDeviceGroupLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceUpdateDeviceTypeFromUpdateDeviceLambdaLogGroup483DDFF4": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "UpdateDeviceTypeFromUpdateDeviceLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceUpdateDeviceTypeLambdaC1F062E2": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating deviceType for deviceTypePayloads.",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.DeviceTypePayloadHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceUpdateDeviceTypeFromUpdateDeviceLambdaLogGroup483DDFF4",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceUpdateUpdateStatusLambda8D89EED0": {
      "DependsOn": [
        "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating the state of the Update Device Job",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowupdate.UpdateUpdateStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateDeviceUpdateUpdateStatusLambdaLogGroup910C6A02",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceStartCreateDeviceNotificationRole2DB8DDC6",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceUpdateUpdateStatusLambdaLogGroup910C6A02": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "UpdateUpdateStatusLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceWorkflowUpdateDeviceTableDDBStreamProcessorLambdaRole4F9AB0A6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StartUpdateDeviceWorkflowUpdateDeviceTableDDBStreamProcessorLambdaRoleDefaultPolicy81CAC00F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StartUpdateDeviceStartUpdateDeviceStateMachine184A2679",
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamDLQ5A64496D",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamDlqEncryptionKey7C5EBE93",
                  "Arn",
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UpdateDeviceTable478836CD",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartUpdateDeviceWorkflowUpdateDeviceTableDDBStreamProcessorLambdaRoleDefaultPolicy81CAC00F",
        "Roles": [
          {
            "Ref": "StartUpdateDeviceWorkflowUpdateDeviceTableDDBStreamProcessorLambdaRole4F9AB0A6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamDLQ5A64496D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamDlqEncryptionKey7C5EBE93",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamDlqEncryptionKey7C5EBE93": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamProcessorCCA32465": {
      "DependsOn": [
        "StartUpdateDeviceWorkflowUpdateDeviceTableDDBStreamProcessorLambdaRoleDefaultPolicy81CAC00F",
        "StartUpdateDeviceWorkflowUpdateDeviceTableDDBStreamProcessorLambdaRole4F9AB0A6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "341f6632ee9eb419b58e12dc9159f57f2126fc1f7138a2bc67a407a28ec38fbe.zip",
        },
        "Description": "Lambda responsible for invocation of StepFunction",
        "Environment": {
          "Variables": {
            "PARTITION_KEY": "JobId",
            "SORT_KEY": "",
            "STATE_MACHINE_ARN": {
              "Ref": "StartUpdateDeviceStartUpdateDeviceStateMachine184A2679",
            },
          },
        },
        "Handler": "com.amazon.aws.videoanalytics.common.workflow.StreamProcessor::handleRequest",
        "MemorySize": 1028,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateDeviceWorkflowUpdateDeviceTableDDBStreamProcessorLambdaRole4F9AB0A6",
            "Arn",
          ],
        },
        "Runtime": "java17",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamProcessorDynamoDBEventSourceMyTestStackUpdateDeviceTable64390DDC9E39D308": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamDLQ5A64496D",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "UpdateDeviceTable478836CD",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "StartUpdateDeviceWorkflowUpdateDeviceTableUpdateDeviceTableStreamProcessorCCA32465",
        },
        "MaximumRetryAttempts": 2,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "StartUpdateNotificationRuleFailUpdateNotificationRuleStatusLambda1EE5588A": {
      "DependsOn": [
        "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for marking as failed",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowworkflow.updatenotifrule.FailUpdateNotificationRuleStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateNotificationRuleFailUpdateNotificationRuleStatusLambdaLogGroup6CB6800A",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateNotificationRuleFailUpdateNotificationRuleStatusLambdaLogGroup6CB6800A": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "FailUpdateNotificationRuleStatusLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                    {
                      "Fn::GetAtt": [
                        "UpdateNotificationRuleTableD4C5D41D",
                        "Arn",
                      ],
                    },
                  ],
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "AccessPolicy",
          },
        ],
        "RoleName": "StartUpdateNotificationRuleRole",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachine32164ACB": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachineRoleDefaultPolicy14089FC6",
        "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachineRole0ECE8E6C",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"UpdateIotRule","States":{"UpdateIotRule":{"Next":"UpdateCreateNotificationRuleStatus","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateNotificationRuleStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateNotificationRuleUpdateIotRuleLambda492B977A",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"UpdateCreateNotificationRuleStatus":{"Next":"Successful","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["com.amazon.awsvideoanalyticsdmcontrolplane.exceptions.RetryableException"],"IntervalSeconds":2,"MaxAttempts":5,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.error","Next":"FailCreateNotificationRuleStatus"}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateNotificationRuleUpdateUpdateNotificationRuleStatusLambda1FAA27DA",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey"}}},"Successful":{"Type":"Succeed"},"FailCreateNotificationRuleStatus":{"Next":"Fail","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","ResultPath":"$.output","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "StartUpdateNotificationRuleFailUpdateNotificationRuleStatusLambda1EE5588A",
                  "Arn",
                ],
              },
              "","Payload":{"jobId.$":"$.partitionKey","failureReason.$":"$.error.Cause"}}},"Fail":{"Type":"Fail"}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachineRole0ECE8E6C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachineRole0ECE8E6C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachineRoleDefaultPolicy14089FC6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateNotificationRuleUpdateIotRuleLambda492B977A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateNotificationRuleUpdateIotRuleLambda492B977A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateNotificationRuleUpdateUpdateNotificationRuleStatusLambda1FAA27DA",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateNotificationRuleUpdateUpdateNotificationRuleStatusLambda1FAA27DA",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "StartUpdateNotificationRuleFailUpdateNotificationRuleStatusLambda1EE5588A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "StartUpdateNotificationRuleFailUpdateNotificationRuleStatusLambda1EE5588A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachineRoleDefaultPolicy14089FC6",
        "Roles": [
          {
            "Ref": "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachineRole0ECE8E6C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartUpdateNotificationRuleUpdateIotRuleLambda492B977A": {
      "DependsOn": [
        "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating an IoT Rule",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowworkflow.updatenotifrule.UpdateIotRuleHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateNotificationRuleUpdateIotRuleLambdaLogGroup0D8C9C31",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateNotificationRuleUpdateIotRuleLambdaLogGroup0D8C9C31": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "UpdateIotRuleLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateNotificationRuleUpdateUpdateNotificationRuleStatusLambda1FAA27DA": {
      "DependsOn": [
        "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "1d4c1ea1d60d1ef8ec2a78534c2d14a71c5775b8b57ddc7d6cce558ec1e82e9b.jar",
        },
        "Description": "Lambda responsible for updating the state of the Update Notification Rule Job",
        "Environment": {
          "Variables": {
            "AccountId": "123456789012",
            "LambdaRoleArn": {
              "Fn::GetAtt": [
                "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
                "Arn",
              ],
            },
          },
        },
        "Handler": "com.amazonaws.videoanalytics.devicemanagement.workflowworkflow.updatenotifrule.UpdateUpdateNotificationRuleStatusStateHandler::handleRequest",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "StartUpdateNotificationRuleUpdateUpdateNotificationRuleStatusLambdaLogGroupE7BE8DF3",
          },
        },
        "MemorySize": 2048,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateNotificationRuleStartUpdateNotificationRuleRoleAF3033AB",
            "Arn",
          ],
        },
        "Runtime": "java17",
        "Timeout": 720,
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateNotificationRuleUpdateUpdateNotificationRuleStatusLambdaLogGroupE7BE8DF3": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "UpdateUpdateNotificationRuleStatusLambdaLogGroup",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableDDBStreamProcessorLambdaRoleC63356E8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableDDBStreamProcessorLambdaRoleDefaultPolicy1A212F7F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachine32164ACB",
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamDLQ009AB47E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamDlqEncryptionKey3761F374",
                  "Arn",
                ],
              },
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "UpdateNotificationRuleTableD4C5D41D",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableDDBStreamProcessorLambdaRoleDefaultPolicy1A212F7F",
        "Roles": [
          {
            "Ref": "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableDDBStreamProcessorLambdaRoleC63356E8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamDLQ009AB47E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamDlqEncryptionKey3761F374",
            "Arn",
          ],
        },
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamDlqEncryptionKey3761F374": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::123456789012:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamProcessor8D22553C": {
      "DependsOn": [
        "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableDDBStreamProcessorLambdaRoleDefaultPolicy1A212F7F",
        "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableDDBStreamProcessorLambdaRoleC63356E8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "341f6632ee9eb419b58e12dc9159f57f2126fc1f7138a2bc67a407a28ec38fbe.zip",
        },
        "Description": "Lambda responsible for invocation of StepFunction",
        "Environment": {
          "Variables": {
            "PARTITION_KEY": "JobId",
            "SORT_KEY": "",
            "STATE_MACHINE_ARN": {
              "Ref": "StartUpdateNotificationRuleStartUpdateNotificationRuleStateMachine32164ACB",
            },
          },
        },
        "Handler": "com.amazon.aws.videoanalytics.common.workflow.StreamProcessor::handleRequest",
        "MemorySize": 1028,
        "Role": {
          "Fn::GetAtt": [
            "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableDDBStreamProcessorLambdaRoleC63356E8",
            "Arn",
          ],
        },
        "Runtime": "java17",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamProcessorDynamoDBEventSourceMyTestStackUpdateNotificationRuleTableAD48352E5A0381A9": {
      "Properties": {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamDLQ009AB47E",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "UpdateNotificationRuleTableD4C5D41D",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "StartUpdateNotificationRuleWorkflowUpdateNotificationRuleTableUpdateNotificationRuleTableStreamProcessor8D22553C",
        },
        "MaximumRetryAttempts": 2,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "UpdateDeviceTable478836CD": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "JobId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "JobId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableClass": "STANDARD",
        "TableName": "UpdateDeviceTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "UpdateNotificationRuleTableD4C5D41D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "JobId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "DeletionProtectionEnabled": true,
        "KeySchema": [
          {
            "AttributeName": "JobId",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableClass": "STANDARD",
        "TableName": "UpdateNotificationRuleTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
