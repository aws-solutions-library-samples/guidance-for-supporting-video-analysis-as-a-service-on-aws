/*
 * Video Analytic Guidance Solution - Video Logistics
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024-10-18
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.amazonaws.videoanalytics.videologistics;

import java.util.Objects;
import com.amazonaws.videoanalytics.videologistics.TimeIncrementUnits;
import com.amazonaws.videoanalytics.videologistics.VideoTimeline;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.amazonaws.videoanalytics.JSON;

/**
 * ListVideoTimelinesResponseContent
 */
@lombok.Builder
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.8.0")
public class ListVideoTimelinesResponseContent {
  public static final String SERIALIZED_NAME_DEVICE_ID = "deviceId";
  @SerializedName(SERIALIZED_NAME_DEVICE_ID)
  private String deviceId;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private Double startTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private Double endTime;

  public static final String SERIALIZED_NAME_TIME_INCREMENT = "timeIncrement";
  @SerializedName(SERIALIZED_NAME_TIME_INCREMENT)
  private BigDecimal timeIncrement;

  public static final String SERIALIZED_NAME_TIME_INCREMENT_UNITS = "timeIncrementUnits";
  @SerializedName(SERIALIZED_NAME_TIME_INCREMENT_UNITS)
  private TimeIncrementUnits timeIncrementUnits;

  public static final String SERIALIZED_NAME_VIDEO_TIMELINES = "videoTimelines";
  @SerializedName(SERIALIZED_NAME_VIDEO_TIMELINES)
  private List<VideoTimeline> videoTimelines = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "nextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public ListVideoTimelinesResponseContent() {
  }

  public ListVideoTimelinesResponseContent deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * Get deviceId
   * @return deviceId
   */
  @javax.annotation.Nullable
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }


  public ListVideoTimelinesResponseContent startTime(Double startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public Double getStartTime() {
    return startTime;
  }

  public void setStartTime(Double startTime) {
    this.startTime = startTime;
  }


  public ListVideoTimelinesResponseContent endTime(Double endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public Double getEndTime() {
    return endTime;
  }

  public void setEndTime(Double endTime) {
    this.endTime = endTime;
  }


  public ListVideoTimelinesResponseContent timeIncrement(BigDecimal timeIncrement) {
    this.timeIncrement = timeIncrement;
    return this;
  }

  /**
   * Get timeIncrement
   * @return timeIncrement
   */
  @javax.annotation.Nullable
  public BigDecimal getTimeIncrement() {
    return timeIncrement;
  }

  public void setTimeIncrement(BigDecimal timeIncrement) {
    this.timeIncrement = timeIncrement;
  }


  public ListVideoTimelinesResponseContent timeIncrementUnits(TimeIncrementUnits timeIncrementUnits) {
    this.timeIncrementUnits = timeIncrementUnits;
    return this;
  }

  /**
   * Get timeIncrementUnits
   * @return timeIncrementUnits
   */
  @javax.annotation.Nullable
  public TimeIncrementUnits getTimeIncrementUnits() {
    return timeIncrementUnits;
  }

  public void setTimeIncrementUnits(TimeIncrementUnits timeIncrementUnits) {
    this.timeIncrementUnits = timeIncrementUnits;
  }


  public ListVideoTimelinesResponseContent videoTimelines(List<VideoTimeline> videoTimelines) {
    this.videoTimelines = videoTimelines;
    return this;
  }

  public ListVideoTimelinesResponseContent addVideoTimelinesItem(VideoTimeline videoTimelinesItem) {
    if (this.videoTimelines == null) {
      this.videoTimelines = new ArrayList<>();
    }
    this.videoTimelines.add(videoTimelinesItem);
    return this;
  }

  /**
   * Get videoTimelines
   * @return videoTimelines
   */
  @javax.annotation.Nullable
  public List<VideoTimeline> getVideoTimelines() {
    return videoTimelines;
  }

  public void setVideoTimelines(List<VideoTimeline> videoTimelines) {
    this.videoTimelines = videoTimelines;
  }


  public ListVideoTimelinesResponseContent nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

  /**
   * Get nextToken
   * @return nextToken
   */
  @javax.annotation.Nullable
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListVideoTimelinesResponseContent listVideoTimelinesResponseContent = (ListVideoTimelinesResponseContent) o;
    return Objects.equals(this.deviceId, listVideoTimelinesResponseContent.deviceId) &&
        Objects.equals(this.startTime, listVideoTimelinesResponseContent.startTime) &&
        Objects.equals(this.endTime, listVideoTimelinesResponseContent.endTime) &&
        Objects.equals(this.timeIncrement, listVideoTimelinesResponseContent.timeIncrement) &&
        Objects.equals(this.timeIncrementUnits, listVideoTimelinesResponseContent.timeIncrementUnits) &&
        Objects.equals(this.videoTimelines, listVideoTimelinesResponseContent.videoTimelines) &&
        Objects.equals(this.nextToken, listVideoTimelinesResponseContent.nextToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, startTime, endTime, timeIncrement, timeIncrementUnits, videoTimelines, nextToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListVideoTimelinesResponseContent {\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    timeIncrement: ").append(toIndentedString(timeIncrement)).append("\n");
    sb.append("    timeIncrementUnits: ").append(toIndentedString(timeIncrementUnits)).append("\n");
    sb.append("    videoTimelines: ").append(toIndentedString(videoTimelines)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deviceId");
    openapiFields.add("startTime");
    openapiFields.add("endTime");
    openapiFields.add("timeIncrement");
    openapiFields.add("timeIncrementUnits");
    openapiFields.add("videoTimelines");
    openapiFields.add("nextToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListVideoTimelinesResponseContent
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListVideoTimelinesResponseContent.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListVideoTimelinesResponseContent is not found in the empty JSON string", ListVideoTimelinesResponseContent.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListVideoTimelinesResponseContent.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListVideoTimelinesResponseContent` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deviceId") != null && !jsonObj.get("deviceId").isJsonNull()) && !jsonObj.get("deviceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceId").toString()));
      }
      // validate the optional field `timeIncrementUnits`
      if (jsonObj.get("timeIncrementUnits") != null && !jsonObj.get("timeIncrementUnits").isJsonNull()) {
        TimeIncrementUnits.validateJsonElement(jsonObj.get("timeIncrementUnits"));
      }
      if (jsonObj.get("videoTimelines") != null && !jsonObj.get("videoTimelines").isJsonNull()) {
        JsonArray jsonArrayvideoTimelines = jsonObj.getAsJsonArray("videoTimelines");
        if (jsonArrayvideoTimelines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("videoTimelines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `videoTimelines` to be an array in the JSON string but got `%s`", jsonObj.get("videoTimelines").toString()));
          }

          // validate the optional field `videoTimelines` (array)
          for (int i = 0; i < jsonArrayvideoTimelines.size(); i++) {
            VideoTimeline.validateJsonElement(jsonArrayvideoTimelines.get(i));
          };
        }
      }
      if ((jsonObj.get("nextToken") != null && !jsonObj.get("nextToken").isJsonNull()) && !jsonObj.get("nextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListVideoTimelinesResponseContent.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListVideoTimelinesResponseContent' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListVideoTimelinesResponseContent> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListVideoTimelinesResponseContent.class));

       return (TypeAdapter<T>) new TypeAdapter<ListVideoTimelinesResponseContent>() {
           @Override
           public void write(JsonWriter out, ListVideoTimelinesResponseContent value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListVideoTimelinesResponseContent read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListVideoTimelinesResponseContent given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListVideoTimelinesResponseContent
   * @throws IOException if the JSON string is invalid with respect to ListVideoTimelinesResponseContent
   */
  public static ListVideoTimelinesResponseContent fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListVideoTimelinesResponseContent.class);
  }

  /**
   * Convert an instance of ListVideoTimelinesResponseContent to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

