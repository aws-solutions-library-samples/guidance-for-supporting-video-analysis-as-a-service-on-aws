package com.amazonaws.videoanalytics.devicemanagement.schema;

import com.amazonaws.videoanalytics.devicemanagement.schema.SchemaConst;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.Getter;
import lombok.NoArgsConstructor;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbUpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.mapper.UpdateBehavior;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;

import java.time.Instant;
import java.util.List;

@DynamoDbBean
@Builder
@AllArgsConstructor
@NoArgsConstructor
@Data
public class UpdateDevice {
    @Getter(onMethod_ = { @DynamoDbPartitionKey, @DynamoDbAttribute(SchemaConst.JOB_ID) })
    private String jobId;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.DEVICE_ID) })
    private String deviceId;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.JOB_STATUS) })
    private String jobStatus;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.CURRENT_DEVICE_STATE) })
    private String currentDeviceState;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.NEW_DEVICE_STATE) })
    private String newDeviceState;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.CURRENT_VIDEO_SETTINGS) })
    private String currentVideoSettings;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.CURRENT_AI_SETTINGS) })
    private String currentAiSettings;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.CONFIGURATIONS) })
    private String configurations;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.THING_GROUP_ID_LIST) })
    private List<String> thingGroupIdList;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.REMOVE_THING_GROUP) })
    private Boolean removeThingGroup;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.DEVICE_TYPE_ID) })
    private String deviceTypeId;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.REMOVE_DEVICE_TYPE) })
    private Boolean removeDeviceType;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.FVL_JOB_ID) })
    private String fvlJobId;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.ERROR_MESSAGE) })
    private String errorMessage;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.LAST_UPDATED),
            @DynamoDbAutoGeneratedTimestampAttribute, @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_ALWAYS) })
    private Instant lastUpdated;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.CREATED_AT),
            @DynamoDbAutoGeneratedTimestampAttribute, @DynamoDbUpdateBehavior(UpdateBehavior.WRITE_IF_NOT_EXISTS) })
    private Instant createdAt;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.WORKFLOW_NAME) })
    private String workflowName;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.COMMAND) })
    private String command;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.RETRIES) })
    private Integer retries;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.TIMEOUT) })
    private Integer timeout;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.IOT_JOB_ID) })
    private String iotJobId;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.IOT_INSTALL_JOB_ID) })
    private String iotInstallJobId;

    @Getter(onMethod_ = { @DynamoDbAttribute(SchemaConst.S3_URI) })
    private String s3Uri;
}